<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/Users/drolya/Public/visualmasters/app</parameter>
    <parameter key="kernel.project_dir">/Users/drolya/Public/visualmasters</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">/Users/drolya/Public/visualmasters/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/Users/drolya/Public/visualmasters/var/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="AsseticBundle">Symfony\Bundle\AsseticBundle\AsseticBundle</parameter>
      <parameter key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</parameter>
      <parameter key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</parameter>
      <parameter key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</parameter>
      <parameter key="SonataMediaBundle">Sonata\MediaBundle\SonataMediaBundle</parameter>
      <parameter key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="ApplicationSonataMediaBundle">Application\Sonata\MediaBundle\ApplicationSonataMediaBundle</parameter>
      <parameter key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</parameter>
      <parameter key="SonataUserBundle">Sonata\UserBundle\SonataUserBundle</parameter>
      <parameter key="GalleryBundle">GalleryBundle\GalleryBundle</parameter>
      <parameter key="LandingBundle">LandingBundle\LandingBundle</parameter>
      <parameter key="SiteBundle">SiteBundle\SiteBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</parameter>
      <parameter key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</parameter>
      <parameter key="WebServerBundle">Symfony\Bundle\WebServerBundle\WebServerBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/symfony/swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/sensio/framework-extra-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="AsseticBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/symfony/assetic-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\AsseticBundle</parameter>
      </parameter>
      <parameter key="SonataCoreBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src</parameter>
        <parameter key="namespace">Sonata\CoreBundle</parameter>
      </parameter>
      <parameter key="SonataBlockBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src</parameter>
        <parameter key="namespace">Sonata\BlockBundle</parameter>
      </parameter>
      <parameter key="KnpMenuBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/knplabs/knp-menu-bundle/src</parameter>
        <parameter key="namespace">Knp\Bundle\MenuBundle</parameter>
      </parameter>
      <parameter key="SonataDoctrineORMAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/sonata-project/doctrine-orm-admin-bundle/src</parameter>
        <parameter key="namespace">Sonata\DoctrineORMAdminBundle</parameter>
      </parameter>
      <parameter key="SonataAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src</parameter>
        <parameter key="namespace">Sonata\AdminBundle</parameter>
      </parameter>
      <parameter key="SonataMediaBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src</parameter>
        <parameter key="namespace">Sonata\MediaBundle</parameter>
      </parameter>
      <parameter key="SonataEasyExtendsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/sonata-project/easy-extends-bundle/src</parameter>
        <parameter key="namespace">Sonata\EasyExtendsBundle</parameter>
      </parameter>
      <parameter key="JMSSerializerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/jms/serializer-bundle</parameter>
        <parameter key="namespace">JMS\SerializerBundle</parameter>
      </parameter>
      <parameter key="ApplicationSonataMediaBundle" type="collection">
        <parameter key="parent">SonataMediaBundle</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/src/Application/Sonata/MediaBundle</parameter>
        <parameter key="namespace">Application\Sonata\MediaBundle</parameter>
      </parameter>
      <parameter key="FOSUserBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle</parameter>
        <parameter key="namespace">FOS\UserBundle</parameter>
      </parameter>
      <parameter key="SonataUserBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src</parameter>
        <parameter key="namespace">Sonata\UserBundle</parameter>
      </parameter>
      <parameter key="GalleryBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/src/GalleryBundle</parameter>
        <parameter key="namespace">GalleryBundle</parameter>
      </parameter>
      <parameter key="LandingBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/src/LandingBundle</parameter>
        <parameter key="namespace">LandingBundle</parameter>
      </parameter>
      <parameter key="SiteBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/src/SiteBundle</parameter>
        <parameter key="namespace">SiteBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="SensioDistributionBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/sensio/distribution-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\DistributionBundle</parameter>
      </parameter>
      <parameter key="SensioGeneratorBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/sensio/generator-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\GeneratorBundle</parameter>
      </parameter>
      <parameter key="WebServerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/WebServerBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebServerBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appDevDebugProjectContainer</parameter>
    <parameter key="container.autowiring.strict_mode">true</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="database_host">127.0.0.1</parameter>
    <parameter key="database_port">null</parameter>
    <parameter key="database_name">vm</parameter>
    <parameter key="database_user">root</parameter>
    <parameter key="database_password">root</parameter>
    <parameter key="mailer_transport">smtp</parameter>
    <parameter key="mailer_host">127.0.0.1</parameter>
    <parameter key="mailer_user">test@test.com</parameter>
    <parameter key="mailer_password">null</parameter>
    <parameter key="secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="jms_serializer.camel_case_naming_strategy.class">JMS\Serializer\Naming\IdenticalPropertyNamingStrategy</parameter>
    <parameter key="router.request_context.host">host.com</parameter>
    <parameter key="router.request_context.scheme">https</parameter>
    <parameter key="router.request_context.base_url">my/path</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter">0</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
      <parameter key="use_strict_mode">true</parameter>
    </parameter>
    <parameter key="session.save_path">/Users/drolya/Public/visualmasters/var/sessions/dev</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">/Users/drolya/Public/visualmasters/var/cache/dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">true</parameter>
    <parameter key="translator.default_path">/Users/drolya/Public/visualmasters/translations</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/Users/drolya/Public/visualmasters/var/cache/dev/profiler</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/Users/drolya/Public/visualmasters/var/cache/dev/appDevDebugProjectContainer.xml</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.options.matcher.cache_class">appDevDebugProjectContainerUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appDevDebugProjectContainerUrlGenerator</parameter>
    <parameter key="router.resource">/Users/drolya/Public/visualmasters/app/config/routing_dev.yml</parameter>
    <parameter key="router.cache_class_prefix">appDevDebugProjectContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_SONATA_ADMIN</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
      <parameter key="SONATA" type="collection">
        <parameter>ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.acl.dbal.class_table_name">acl_classes</parameter>
    <parameter key="security.acl.dbal.entry_table_name">acl_entries</parameter>
    <parameter key="security.acl.dbal.oid_table_name">acl_object_identities</parameter>
    <parameter key="security.acl.dbal.oid_ancestors_table_name">acl_object_identity_ancestors</parameter>
    <parameter key="security.acl.dbal.sid_table_name">acl_security_identities</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception:showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>@SonataUser/Form/form_admin_fields.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/Users/drolya/Public/visualmasters/templates</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.server_log">null</parameter>
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="swiftmailer.class">Swift_Mailer</parameter>
    <parameter key="swiftmailer.transport.sendmail.class">Swift_Transport_SendmailTransport</parameter>
    <parameter key="swiftmailer.transport.mail.class">Swift_Transport_MailTransport</parameter>
    <parameter key="swiftmailer.transport.failover.class">Swift_Transport_FailoverTransport</parameter>
    <parameter key="swiftmailer.plugin.redirecting.class">Swift_Plugins_RedirectingPlugin</parameter>
    <parameter key="swiftmailer.plugin.impersonate.class">Swift_Plugins_ImpersonatePlugin</parameter>
    <parameter key="swiftmailer.plugin.messagelogger.class">Swift_Plugins_MessageLogger</parameter>
    <parameter key="swiftmailer.plugin.antiflood.class">Swift_Plugins_AntiFloodPlugin</parameter>
    <parameter key="swiftmailer.transport.smtp.class">Swift_Transport_EsmtpTransport</parameter>
    <parameter key="swiftmailer.plugin.blackhole.class">Swift_Plugins_BlackholePlugin</parameter>
    <parameter key="swiftmailer.spool.file.class">Swift_FileSpool</parameter>
    <parameter key="swiftmailer.spool.memory.class">Swift_MemorySpool</parameter>
    <parameter key="swiftmailer.email_sender.listener.class">Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</parameter>
    <parameter key="swiftmailer.data_collector.class">Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">25</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">127.0.0.1</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">test@test.com</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.local_domain">null</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">/Users/drolya/Public/visualmasters/var/cache/dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="json" type="collection">
        <parameter key="class">Sonata\Doctrine\Types\JsonType</parameter>
        <parameter key="commented">true</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/Users/drolya/Public/visualmasters/var/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="assetic.asset_factory.class">Symfony\Bundle\AsseticBundle\Factory\AssetFactory</parameter>
    <parameter key="assetic.asset_manager.class">Assetic\Factory\LazyAssetManager</parameter>
    <parameter key="assetic.asset_manager_cache_warmer.class">Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer</parameter>
    <parameter key="assetic.cached_formula_loader.class">Assetic\Factory\Loader\CachedFormulaLoader</parameter>
    <parameter key="assetic.config_cache.class">Assetic\Cache\ConfigCache</parameter>
    <parameter key="assetic.config_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader</parameter>
    <parameter key="assetic.config_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource</parameter>
    <parameter key="assetic.coalescing_directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource</parameter>
    <parameter key="assetic.directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource</parameter>
    <parameter key="assetic.filter_manager.class">Symfony\Bundle\AsseticBundle\FilterManager</parameter>
    <parameter key="assetic.worker.ensure_filter.class">Assetic\Factory\Worker\EnsureFilterWorker</parameter>
    <parameter key="assetic.worker.cache_busting.class">Assetic\Factory\Worker\CacheBustingWorker</parameter>
    <parameter key="assetic.value_supplier.class">Symfony\Bundle\AsseticBundle\DefaultValueSupplier</parameter>
    <parameter key="assetic.node.paths" type="collection"/>
    <parameter key="assetic.cache_dir">/Users/drolya/Public/visualmasters/var/cache/dev/assetic</parameter>
    <parameter key="assetic.bundles" type="collection">
      <parameter>SiteBundle</parameter>
      <parameter>GalleryBundle</parameter>
      <parameter>SonataAdminBundle</parameter>
      <parameter>LandingBundle</parameter>
    </parameter>
    <parameter key="assetic.twig_extension.class">Symfony\Bundle\AsseticBundle\Twig\AsseticExtension</parameter>
    <parameter key="assetic.twig_formula_loader.class">Assetic\Extension\Twig\TwigFormulaLoader</parameter>
    <parameter key="assetic.helper.dynamic.class">Symfony\Bundle\AsseticBundle\Templating\DynamicAsseticHelper</parameter>
    <parameter key="assetic.helper.static.class">Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper</parameter>
    <parameter key="assetic.php_formula_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\AsseticHelperFormulaLoader</parameter>
    <parameter key="assetic.debug">true</parameter>
    <parameter key="assetic.use_controller">false</parameter>
    <parameter key="assetic.enable_profiler">false</parameter>
    <parameter key="assetic.read_from">/Users/drolya/Public/visualmasters/app/../web</parameter>
    <parameter key="assetic.write_to">/Users/drolya/Public/visualmasters/app/../web</parameter>
    <parameter key="assetic.variables" type="collection"/>
    <parameter key="assetic.java.bin">/usr/bin/java</parameter>
    <parameter key="assetic.node.bin">/usr/local/bin/node</parameter>
    <parameter key="assetic.ruby.bin">/usr/bin/ruby</parameter>
    <parameter key="assetic.sass.bin">/usr/bin/sass</parameter>
    <parameter key="assetic.reactjsx.bin">/usr/bin/jsx</parameter>
    <parameter key="assetic.filter.cssrewrite.class">Assetic\Filter\CssRewriteFilter</parameter>
    <parameter key="assetic.filter.yui_css.class">Assetic\Filter\Yui\CssCompressorFilter</parameter>
    <parameter key="assetic.filter.yui_css.java">/usr/bin/java</parameter>
    <parameter key="assetic.filter.yui_css.jar">/Users/drolya/Public/visualmasters/app/Resources/java/yuicompressor-2.4.8.jar</parameter>
    <parameter key="assetic.filter.yui_css.charset">UTF-8</parameter>
    <parameter key="assetic.filter.yui_css.stacksize">null</parameter>
    <parameter key="assetic.filter.yui_css.timeout">null</parameter>
    <parameter key="assetic.filter.yui_css.linebreak">null</parameter>
    <parameter key="assetic.filter.yui_js.class">Assetic\Filter\Yui\JsCompressorFilter</parameter>
    <parameter key="assetic.filter.yui_js.java">/usr/bin/java</parameter>
    <parameter key="assetic.filter.yui_js.jar">/Users/drolya/Public/visualmasters/app/Resources/java/yuicompressor-2.4.8.jar</parameter>
    <parameter key="assetic.filter.yui_js.charset">UTF-8</parameter>
    <parameter key="assetic.filter.yui_js.stacksize">null</parameter>
    <parameter key="assetic.filter.yui_js.timeout">null</parameter>
    <parameter key="assetic.filter.yui_js.nomunge">null</parameter>
    <parameter key="assetic.filter.yui_js.preserve_semi">null</parameter>
    <parameter key="assetic.filter.yui_js.disable_optimizations">null</parameter>
    <parameter key="assetic.filter.yui_js.linebreak">null</parameter>
    <parameter key="assetic.twig_extension.functions" type="collection"/>
    <parameter key="sonata.core.flashmessage.manager.class">Sonata\CoreBundle\FlashMessage\FlashManager</parameter>
    <parameter key="sonata.core.twig.extension.flashmessage.class">Sonata\CoreBundle\Twig\Extension\FlashMessageExtension</parameter>
    <parameter key="sonata.core.form_type">standard</parameter>
    <parameter key="sonata.core.form.mapping.type" type="collection"/>
    <parameter key="sonata.core.form.mapping.extension" type="collection"/>
    <parameter key="sonata.block.service.container.class">Sonata\BlockBundle\Block\Service\ContainerBlockService</parameter>
    <parameter key="sonata.block.service.empty.class">Sonata\BlockBundle\Block\Service\EmptyBlockService</parameter>
    <parameter key="sonata.block.service.text.class">Sonata\BlockBundle\Block\Service\TextBlockService</parameter>
    <parameter key="sonata.block.service.rss.class">Sonata\BlockBundle\Block\Service\RssBlockService</parameter>
    <parameter key="sonata.block.service.menu.class">Sonata\BlockBundle\Block\Service\MenuBlockService</parameter>
    <parameter key="sonata.block.service.template.class">Sonata\BlockBundle\Block\Service\TemplateBlockService</parameter>
    <parameter key="sonata.block.exception.strategy.manager.class">Sonata\BlockBundle\Exception\Strategy\StrategyManager</parameter>
    <parameter key="sonata.block.container.types" type="collection">
      <parameter>sonata.block.service.container</parameter>
      <parameter>sonata.page.block.container</parameter>
      <parameter>sonata.dashboard.block.container</parameter>
      <parameter>cmf.block.container</parameter>
      <parameter>cmf.block.slideshow</parameter>
    </parameter>
    <parameter key="sonata_block.blocks" type="collection">
      <parameter key="sonata.admin.block.admin_list" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata_block.blocks_by_class" type="collection"/>
    <parameter key="sonata_block.cache_blocks" type="collection">
      <parameter key="by_type" type="collection">
        <parameter key="sonata.admin.block.admin_list">sonata.cache.noop</parameter>
      </parameter>
    </parameter>
    <parameter key="knp_menu.factory.class">Knp\Menu\MenuFactory</parameter>
    <parameter key="knp_menu.factory_extension.routing.class">Knp\Menu\Integration\Symfony\RoutingExtension</parameter>
    <parameter key="knp_menu.helper.class">Knp\Menu\Twig\Helper</parameter>
    <parameter key="knp_menu.matcher.class">Knp\Menu\Matcher\Matcher</parameter>
    <parameter key="knp_menu.menu_provider.chain.class">Knp\Menu\Provider\ChainProvider</parameter>
    <parameter key="knp_menu.menu_provider.container_aware.class">Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.menu_provider.builder_alias.class">Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider</parameter>
    <parameter key="knp_menu.renderer_provider.class">Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.renderer.list.class">Knp\Menu\Renderer\ListRenderer</parameter>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.listener.voters.class">Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener</parameter>
    <parameter key="knp_menu.voter.router.class">Knp\Menu\Matcher\Voter\RouteVoter</parameter>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">@KnpMenu/menu.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="sonata.admin.manipulator.acl.object.orm.class">Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator</parameter>
    <parameter key="sonata_doctrine_orm_admin.entity_manager">null</parameter>
    <parameter key="sonata_doctrine_orm_admin.templates" type="collection">
      <parameter key="types" type="collection">
        <parameter key="list" type="collection">
          <parameter key="array">@SonataAdmin/CRUD/list_array.html.twig</parameter>
          <parameter key="boolean">@SonataAdmin/CRUD/list_boolean.html.twig</parameter>
          <parameter key="date">@SonataAdmin/CRUD/list_date.html.twig</parameter>
          <parameter key="time">@SonataAdmin/CRUD/list_time.html.twig</parameter>
          <parameter key="datetime">@SonataAdmin/CRUD/list_datetime.html.twig</parameter>
          <parameter key="text">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="textarea">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="email">@SonataAdmin/CRUD/list_email.html.twig</parameter>
          <parameter key="trans">@SonataAdmin/CRUD/list_trans.html.twig</parameter>
          <parameter key="string">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="smallint">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="bigint">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="integer">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="decimal">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="identifier">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="currency">@SonataAdmin/CRUD/list_currency.html.twig</parameter>
          <parameter key="percent">@SonataAdmin/CRUD/list_percent.html.twig</parameter>
          <parameter key="choice">@SonataAdmin/CRUD/list_choice.html.twig</parameter>
          <parameter key="url">@SonataAdmin/CRUD/list_url.html.twig</parameter>
          <parameter key="html">@SonataAdmin/CRUD/list_html.html.twig</parameter>
        </parameter>
        <parameter key="show" type="collection">
          <parameter key="array">@SonataAdmin/CRUD/show_array.html.twig</parameter>
          <parameter key="boolean">@SonataAdmin/CRUD/show_boolean.html.twig</parameter>
          <parameter key="date">@SonataAdmin/CRUD/show_date.html.twig</parameter>
          <parameter key="time">@SonataAdmin/CRUD/show_time.html.twig</parameter>
          <parameter key="datetime">@SonataAdmin/CRUD/show_datetime.html.twig</parameter>
          <parameter key="text">@SonataAdmin/CRUD/base_show_field.html.twig</parameter>
          <parameter key="email">@SonataAdmin/CRUD/show_email.html.twig</parameter>
          <parameter key="trans">@SonataAdmin/CRUD/show_trans.html.twig</parameter>
          <parameter key="string">@SonataAdmin/CRUD/base_show_field.html.twig</parameter>
          <parameter key="smallint">@SonataAdmin/CRUD/base_show_field.html.twig</parameter>
          <parameter key="bigint">@SonataAdmin/CRUD/base_show_field.html.twig</parameter>
          <parameter key="integer">@SonataAdmin/CRUD/base_show_field.html.twig</parameter>
          <parameter key="decimal">@SonataAdmin/CRUD/base_show_field.html.twig</parameter>
          <parameter key="currency">@SonataAdmin/CRUD/show_currency.html.twig</parameter>
          <parameter key="percent">@SonataAdmin/CRUD/show_percent.html.twig</parameter>
          <parameter key="choice">@SonataAdmin/CRUD/show_choice.html.twig</parameter>
          <parameter key="url">@SonataAdmin/CRUD/show_url.html.twig</parameter>
          <parameter key="html">@SonataAdmin/CRUD/show_html.html.twig</parameter>
        </parameter>
      </parameter>
      <parameter key="form" type="collection">
        <parameter>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</parameter>
      </parameter>
      <parameter key="filter" type="collection">
        <parameter>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.twig.extension.x_editable_type_mapping" type="collection">
      <parameter key="choice">select</parameter>
      <parameter key="boolean">select</parameter>
      <parameter key="text">text</parameter>
      <parameter key="textarea">textarea</parameter>
      <parameter key="html">textarea</parameter>
      <parameter key="email">email</parameter>
      <parameter key="string">text</parameter>
      <parameter key="smallint">text</parameter>
      <parameter key="bigint">text</parameter>
      <parameter key="integer">number</parameter>
      <parameter key="decimal">number</parameter>
      <parameter key="currency">number</parameter>
      <parameter key="percent">number</parameter>
      <parameter key="url">url</parameter>
      <parameter key="date">date</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.global_search.empty_boxes">show</parameter>
    <parameter key="sonata.admin.configuration.templates" type="collection">
      <parameter key="user_block">@SonataUser/Admin/Core/user_block.html.twig</parameter>
      <parameter key="short_object_description">::Admin/Helper/short-object-description.html.twig</parameter>
      <parameter key="add_block">@SonataAdmin/Core/add_block.html.twig</parameter>
      <parameter key="layout">@SonataAdmin/standard_layout.html.twig</parameter>
      <parameter key="ajax">@SonataAdmin/ajax_layout.html.twig</parameter>
      <parameter key="dashboard">@SonataAdmin/Core/dashboard.html.twig</parameter>
      <parameter key="search">@SonataAdmin/Core/search.html.twig</parameter>
      <parameter key="list">@SonataAdmin/CRUD/list.html.twig</parameter>
      <parameter key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</parameter>
      <parameter key="show">@SonataAdmin/CRUD/show.html.twig</parameter>
      <parameter key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</parameter>
      <parameter key="edit">@SonataAdmin/CRUD/edit.html.twig</parameter>
      <parameter key="preview">@SonataAdmin/CRUD/preview.html.twig</parameter>
      <parameter key="history">@SonataAdmin/CRUD/history.html.twig</parameter>
      <parameter key="acl">@SonataAdmin/CRUD/acl.html.twig</parameter>
      <parameter key="history_revision_timestamp">@SonataAdmin/CRUD/history_revision_timestamp.html.twig</parameter>
      <parameter key="action">@SonataAdmin/CRUD/action.html.twig</parameter>
      <parameter key="select">@SonataAdmin/CRUD/list__select.html.twig</parameter>
      <parameter key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</parameter>
      <parameter key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</parameter>
      <parameter key="delete">@SonataAdmin/CRUD/delete.html.twig</parameter>
      <parameter key="batch">@SonataAdmin/CRUD/list__batch.html.twig</parameter>
      <parameter key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</parameter>
      <parameter key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</parameter>
      <parameter key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</parameter>
      <parameter key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</parameter>
      <parameter key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</parameter>
      <parameter key="base_list_field">@SonataAdmin/CRUD/base_list_field.html.twig</parameter>
      <parameter key="pager_links">@SonataAdmin/Pager/links.html.twig</parameter>
      <parameter key="pager_results">@SonataAdmin/Pager/results.html.twig</parameter>
      <parameter key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</parameter>
      <parameter key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</parameter>
      <parameter key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</parameter>
      <parameter key="button_acl">@SonataAdmin/Button/acl_button.html.twig</parameter>
      <parameter key="button_create">@SonataAdmin/Button/create_button.html.twig</parameter>
      <parameter key="button_edit">@SonataAdmin/Button/edit_button.html.twig</parameter>
      <parameter key="button_history">@SonataAdmin/Button/history_button.html.twig</parameter>
      <parameter key="button_list">@SonataAdmin/Button/list_button.html.twig</parameter>
      <parameter key="button_show">@SonataAdmin/Button/show_button.html.twig</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.admin_services" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_groups" type="collection">
      <parameter key="Galleries" type="collection">
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="admin">sonata.admin.gallery_page</parameter>
            <parameter key="label"></parameter>
            <parameter key="route"></parameter>
            <parameter key="route_params" type="collection"/>
            <parameter key="route_absolute">false</parameter>
            <parameter key="roles" type="collection"/>
          </parameter>
          <parameter type="collection">
            <parameter key="admin">sonata.admin.slide</parameter>
            <parameter key="label"></parameter>
            <parameter key="route"></parameter>
            <parameter key="route_params" type="collection"/>
            <parameter key="route_absolute">false</parameter>
            <parameter key="roles" type="collection"/>
          </parameter>
        </parameter>
        <parameter key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</parameter>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="Videos" type="collection">
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="admin">sonata.admin.video</parameter>
            <parameter key="label"></parameter>
            <parameter key="route"></parameter>
            <parameter key="route_params" type="collection"/>
            <parameter key="route_absolute">false</parameter>
            <parameter key="roles" type="collection"/>
          </parameter>
        </parameter>
        <parameter key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</parameter>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="Orders" type="collection">
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="admin">sonata.admin.orders</parameter>
            <parameter key="label"></parameter>
            <parameter key="route"></parameter>
            <parameter key="route_params" type="collection"/>
            <parameter key="route_absolute">false</parameter>
            <parameter key="roles" type="collection"/>
          </parameter>
        </parameter>
        <parameter key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</parameter>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.dashboard_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="settings" type="collection"/>
        <parameter key="type">sonata.admin.block.admin_list</parameter>
        <parameter key="roles" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.sort_admins">false</parameter>
    <parameter key="sonata.admin.configuration.breadcrumbs" type="collection">
      <parameter key="child_admin_route">edit</parameter>
    </parameter>
    <parameter key="sonata.admin.security.acl_user_manager">fos_user.user_manager</parameter>
    <parameter key="sonata.admin.configuration.security.role_admin">ROLE_SONATA_ADMIN</parameter>
    <parameter key="sonata.admin.configuration.security.role_super_admin">ROLE_SUPER_ADMIN</parameter>
    <parameter key="sonata.admin.configuration.security.information" type="collection"/>
    <parameter key="sonata.admin.configuration.security.admin_permissions" type="collection">
      <parameter>CREATE</parameter>
      <parameter>LIST</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>EXPORT</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.object_permissions" type="collection">
      <parameter>VIEW</parameter>
      <parameter>EDIT</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
      <parameter>OWNER</parameter>
    </parameter>
    <parameter key="sonata.admin.security.handler.noop.class">Sonata\AdminBundle\Security\Handler\NoopSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.role.class">Sonata\AdminBundle\Security\Handler\RoleSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.acl.class">Sonata\AdminBundle\Security\Handler\AclSecurityHandler</parameter>
    <parameter key="sonata.admin.security.mask.builder.class">Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</parameter>
    <parameter key="sonata.admin.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminAclManipulator</parameter>
    <parameter key="sonata.admin.object.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminObjectAclManipulator</parameter>
    <parameter key="sonata.admin.extension.map" type="collection">
      <parameter key="admins" type="collection"/>
      <parameter key="excludes" type="collection"/>
      <parameter key="implements" type="collection"/>
      <parameter key="extends" type="collection"/>
      <parameter key="instanceof" type="collection"/>
      <parameter key="uses" type="collection"/>
    </parameter>
    <parameter key="sonata.admin.configuration.filters.persist">false</parameter>
    <parameter key="sonata.admin.configuration.filters.persister">sonata.admin.filter_persister.session</parameter>
    <parameter key="sonata.admin.configuration.show.mosaic.button">true</parameter>
    <parameter key="sonata.admin.configuration.translate_group_label">false</parameter>
    <parameter key="sonata.media.provider.image.class">Sonata\MediaBundle\Provider\ImageProvider</parameter>
    <parameter key="sonata.media.provider.file.class">Sonata\MediaBundle\Provider\FileProvider</parameter>
    <parameter key="sonata.media.provider.youtube.class">Sonata\MediaBundle\Provider\YouTubeProvider</parameter>
    <parameter key="sonata.media.provider.dailymotion.class">Sonata\MediaBundle\Provider\DailyMotionProvider</parameter>
    <parameter key="sonata.media.provider.vimeo.class">Sonata\MediaBundle\Provider\VimeoProvider</parameter>
    <parameter key="sonata.media.thumbnail.format">Sonata\MediaBundle\Thumbnail\FormatThumbnail</parameter>
    <parameter key="sonata.media.thumbnail.format.default">jpg</parameter>
    <parameter key="sonata.media.thumbnail.liip_imagine">Sonata\MediaBundle\Thumbnail\LiipImagineThumbnail</parameter>
    <parameter key="sonata.media.pool.class">Sonata\MediaBundle\Provider\Pool</parameter>
    <parameter key="sonata.media.resizer.simple.class">Sonata\MediaBundle\Resizer\SimpleResizer</parameter>
    <parameter key="sonata.media.resizer.square.class">Sonata\MediaBundle\Resizer\SquareResizer</parameter>
    <parameter key="sonata.media.adapter.image.gd.class">Imagine\Gd\Imagine</parameter>
    <parameter key="sonata.media.adapter.image.imagick.class">Imagine\Imagick\Imagine</parameter>
    <parameter key="sonata.media.adapter.image.gmagick.class">Imagine\Gmagick\Imagine</parameter>
    <parameter key="sonata.media.metadata.proxy.class">Sonata\MediaBundle\Metadata\ProxyMetadataBuilder</parameter>
    <parameter key="sonata.media.metadata.amazon.class">Sonata\MediaBundle\Metadata\AmazonMetadataBuilder</parameter>
    <parameter key="sonata.media.metadata.noop.class">Sonata\MediaBundle\Metadata\NoopMetadataBuilder</parameter>
    <parameter key="sonata.media.adapater.filesystem.opencloud.class"></parameter>
    <parameter key="sonata.media.block.media.class">Sonata\MediaBundle\Block\MediaBlockService</parameter>
    <parameter key="sonata.media.block.feature_media.class">Sonata\MediaBundle\Block\FeatureMediaBlockService</parameter>
    <parameter key="sonata.media.block.gallery.class">Sonata\MediaBundle\Block\GalleryBlockService</parameter>
    <parameter key="sonata.media.block.gallery_list.class">Sonata\MediaBundle\Block\GalleryListBlockService</parameter>
    <parameter key="sonata.media.manager.media.class">Sonata\MediaBundle\Entity\MediaManager</parameter>
    <parameter key="sonata.media.manager.gallery.class">Sonata\MediaBundle\Entity\GalleryManager</parameter>
    <parameter key="sonata.media.admin.groupname">sonata_media</parameter>
    <parameter key="sonata.media.admin.groupicon">&lt;i class='fa fa-image'&gt;&lt;/i&gt;</parameter>
    <parameter key="sonata.media.admin.media.class">Sonata\MediaBundle\Admin\ORM\MediaAdmin</parameter>
    <parameter key="sonata.media.admin.media.controller">SonataMediaBundle:MediaAdmin</parameter>
    <parameter key="sonata.media.admin.media.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin.gallery.class">Sonata\MediaBundle\Admin\GalleryAdmin</parameter>
    <parameter key="sonata.media.admin.gallery.controller">SonataMediaBundle:GalleryAdmin</parameter>
    <parameter key="sonata.media.admin.gallery.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.class">Sonata\MediaBundle\Admin\GalleryHasMediaAdmin</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin_format" type="collection">
      <parameter key="width">200</parameter>
      <parameter key="height">false</parameter>
      <parameter key="quality">90</parameter>
      <parameter key="format">jpg</parameter>
      <parameter key="constraint">true</parameter>
    </parameter>
    <parameter key="sonata.media.resizer.simple.adapter.mode">inset</parameter>
    <parameter key="sonata.media.resizer.square.adapter.mode">inset</parameter>
    <parameter key="sonata.media.admin.media.entity">Application\Sonata\MediaBundle\Entity\Media</parameter>
    <parameter key="sonata.media.admin.gallery.entity">Application\Sonata\MediaBundle\Entity\Gallery</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.entity">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</parameter>
    <parameter key="sonata.media.media.class">Application\Sonata\MediaBundle\Entity\Media</parameter>
    <parameter key="sonata.media.gallery.class">Application\Sonata\MediaBundle\Entity\Gallery</parameter>
    <parameter key="jms_serializer.metadata.file_locator.class">Metadata\Driver\FileLocator</parameter>
    <parameter key="jms_serializer.metadata.annotation_driver.class">JMS\Serializer\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_serializer.metadata.chain_driver.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="jms_serializer.metadata.yaml_driver.class">JMS\Serializer\Metadata\Driver\YamlDriver</parameter>
    <parameter key="jms_serializer.metadata.xml_driver.class">JMS\Serializer\Metadata\Driver\XmlDriver</parameter>
    <parameter key="jms_serializer.metadata.php_driver.class">JMS\Serializer\Metadata\Driver\PhpDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrineTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_phpcr_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_serializer.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_serializer.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_serializer.event_dispatcher.class">JMS\Serializer\EventDispatcher\LazyEventDispatcher</parameter>
    <parameter key="jms_serializer.identical_property_naming_strategy.class">JMS\Serializer\Naming\IdenticalPropertyNamingStrategy</parameter>
    <parameter key="jms_serializer.serialized_name_annotation_strategy.class">JMS\Serializer\Naming\SerializedNameAnnotationStrategy</parameter>
    <parameter key="jms_serializer.cache_naming_strategy.class">JMS\Serializer\Naming\CacheNamingStrategy</parameter>
    <parameter key="jms_serializer.doctrine_object_constructor.class">JMS\Serializer\Construction\DoctrineObjectConstructor</parameter>
    <parameter key="jms_serializer.unserialize_object_constructor.class">JMS\Serializer\Construction\UnserializeObjectConstructor</parameter>
    <parameter key="jms_serializer.version_exclusion_strategy.class">JMS\Serializer\Exclusion\VersionExclusionStrategy</parameter>
    <parameter key="jms_serializer.serializer.class">JMS\Serializer\Serializer</parameter>
    <parameter key="jms_serializer.twig_extension.class">JMS\Serializer\Twig\SerializerExtension</parameter>
    <parameter key="jms_serializer.twig_runtime_extension.class">JMS\Serializer\Twig\SerializerRuntimeExtension</parameter>
    <parameter key="jms_serializer.twig_runtime_extension_helper.class">JMS\Serializer\Twig\SerializerRuntimeHelper</parameter>
    <parameter key="jms_serializer.templating.helper.class">JMS\SerializerBundle\Templating\SerializerHelper</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.class">JMS\Serializer\JsonSerializationVisitor</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.options">0</parameter>
    <parameter key="jms_serializer.json_deserialization_visitor.class">JMS\Serializer\JsonDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_serialization_visitor.class">JMS\Serializer\XmlSerializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.class">JMS\Serializer\XmlDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.doctype_whitelist" type="collection"/>
    <parameter key="jms_serializer.xml_serialization_visitor.format_output">true</parameter>
    <parameter key="jms_serializer.yaml_serialization_visitor.class">JMS\Serializer\YamlSerializationVisitor</parameter>
    <parameter key="jms_serializer.handler_registry.class">JMS\Serializer\Handler\LazyHandlerRegistry</parameter>
    <parameter key="jms_serializer.datetime_handler.class">JMS\Serializer\Handler\DateHandler</parameter>
    <parameter key="jms_serializer.array_collection_handler.class">JMS\Serializer\Handler\ArrayCollectionHandler</parameter>
    <parameter key="jms_serializer.php_collection_handler.class">JMS\Serializer\Handler\PhpCollectionHandler</parameter>
    <parameter key="jms_serializer.form_error_handler.class">JMS\Serializer\Handler\FormErrorHandler</parameter>
    <parameter key="jms_serializer.constraint_violation_handler.class">JMS\Serializer\Handler\ConstraintViolationHandler</parameter>
    <parameter key="jms_serializer.doctrine_proxy_subscriber.class">JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber</parameter>
    <parameter key="jms_serializer.stopwatch_subscriber.class">JMS\SerializerBundle\Serializer\StopwatchEventSubscriber</parameter>
    <parameter key="jms_serializer.configured_context_factory.class">JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory</parameter>
    <parameter key="jms_serializer.expression_evaluator.class">JMS\Serializer\Expression\ExpressionEvaluator</parameter>
    <parameter key="jms_serializer.expression_language.class">Symfony\Component\ExpressionLanguage\ExpressionLanguage</parameter>
    <parameter key="jms_serializer.expression_language.function_provider.class">JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider</parameter>
    <parameter key="jms_serializer.accessor_strategy.default.class">JMS\Serializer\Accessor\DefaultAccessorStrategy</parameter>
    <parameter key="jms_serializer.accessor_strategy.expression.class">JMS\Serializer\Accessor\ExpressionAccessorStrategy</parameter>
    <parameter key="jms_serializer.cache.cache_warmer.class">JMS\SerializerBundle\Cache\CacheWarmer</parameter>
    <parameter key="fos_user.backend_type_orm">true</parameter>
    <parameter key="fos_user.security.interactive_login_listener.class">FOS\UserBundle\EventListener\LastLoginListener</parameter>
    <parameter key="fos_user.security.login_manager.class">FOS\UserBundle\Security\LoginManager</parameter>
    <parameter key="fos_user.resetting.email.template">@FOSUser/Resetting/email.txt.twig</parameter>
    <parameter key="fos_user.registration.confirmation.template">@FOSUser/Registration/email.txt.twig</parameter>
    <parameter key="fos_user.storage">orm</parameter>
    <parameter key="fos_user.firewall_name">main</parameter>
    <parameter key="fos_user.model_manager_name">null</parameter>
    <parameter key="fos_user.model.user.class">SiteBundle\Entity\User</parameter>
    <parameter key="fos_user.profile.form.type">FOS\UserBundle\Form\Type\ProfileFormType</parameter>
    <parameter key="fos_user.profile.form.name">fos_user_profile_form</parameter>
    <parameter key="fos_user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.from_email" type="collection">
      <parameter key="test@test.com">test@test.com</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.enabled">false</parameter>
    <parameter key="fos_user.registration.form.type">FOS\UserBundle\Form\Type\RegistrationFormType</parameter>
    <parameter key="fos_user.registration.form.name">fos_user_registration_form</parameter>
    <parameter key="fos_user.registration.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.change_password.form.type">FOS\UserBundle\Form\Type\ChangePasswordFormType</parameter>
    <parameter key="fos_user.change_password.form.name">fos_user_change_password_form</parameter>
    <parameter key="fos_user.change_password.form.validation_groups" type="collection">
      <parameter>ChangePassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.resetting.email.from_email" type="collection">
      <parameter key="test@test.com">test@test.com</parameter>
    </parameter>
    <parameter key="fos_user.resetting.retry_ttl">7200</parameter>
    <parameter key="fos_user.resetting.token_ttl">86400</parameter>
    <parameter key="fos_user.resetting.form.type">FOS\UserBundle\Form\Type\ResettingFormType</parameter>
    <parameter key="fos_user.resetting.form.name">fos_user_resetting_form</parameter>
    <parameter key="fos_user.resetting.form.validation_groups" type="collection">
      <parameter>ResetPassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.group_manager.class">FOS\UserBundle\Doctrine\GroupManager</parameter>
    <parameter key="fos_user.model.group.class">Sonata\UserBundle\Entity\BaseGroup</parameter>
    <parameter key="fos_user.group.form.type">FOS\UserBundle\Form\Type\GroupFormType</parameter>
    <parameter key="fos_user.group.form.name">fos_user_group_form</parameter>
    <parameter key="fos_user.group.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="sonata.user.admin.groupname">sonata_user</parameter>
    <parameter key="sonata.user.admin.label_catalogue">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.groupicon">&lt;i class='fa fa-users'&gt;&lt;/i&gt;</parameter>
    <parameter key="security.acl.user_voter.class">Sonata\UserBundle\Security\Authorization\Voter\UserAclVoter</parameter>
    <parameter key="sonata.user.admin.user.class">Sonata\UserBundle\Admin\Entity\UserAdmin</parameter>
    <parameter key="sonata.user.admin.group.class">Sonata\UserBundle\Admin\Entity\GroupAdmin</parameter>
    <parameter key="sonata.user.admin.user.entity">Sonata\UserBundle\Entity\BaseUser</parameter>
    <parameter key="sonata.user.admin.group.entity">Sonata\UserBundle\Entity\BaseGroup</parameter>
    <parameter key="sonata.user.admin.user.translation_domain">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.group.translation_domain">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.user.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.user.admin.group.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.user.default_avatar">bundles/sonatauser/default_avatar.png</parameter>
    <parameter key="sonata.user.impersonating">false</parameter>
    <parameter key="sonata.user.google.authenticator.enabled">false</parameter>
    <parameter key="web_profiler.debug_toolbar.position">bottom</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="sonata.block.data_collector" type="collection">
        <parameter>block</parameter>
        <parameter>@SonataBlock/Profiler/block.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_aboutcommand">console.command.about</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_assetsinstallcommand">console.command.assets_install</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_cacheclearcommand">console.command.cache_clear</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_cachepoolclearcommand">console.command.cache_pool_clear</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_cachepoolprunecommand">console.command.cache_pool_prune</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_cachewarmupcommand">console.command.cache_warmup</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_configdebugcommand">console.command.config_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_configdumpreferencecommand">console.command.config_dump_reference</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_containerdebugcommand">console.command.container_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_debugautowiringcommand">console.command.debug_autowiring</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_eventdispatcherdebugcommand">console.command.event_dispatcher_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_routerdebugcommand">console.command.router_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_routermatchcommand">console.command.router_match</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_translationdebugcommand">console.command.translation_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_translationupdatecommand">console.command.translation_update</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_xlifflintcommand">console.command.xliff_lint</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_yamllintcommand">console.command.yaml_lint</parameter>
      <parameter key="console.command.symfony_component_form_command_debugcommand">console.command.form_debug</parameter>
      <parameter key="console.command.symfony_bundle_securitybundle_command_initaclcommand">security.command.init_acl</parameter>
      <parameter key="console.command.symfony_bundle_securitybundle_command_setaclcommand">security.command.set_acl</parameter>
      <parameter key="console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand">security.command.user_password_encoder</parameter>
      <parameter key="console.command.symfony_bridge_twig_command_debugcommand">twig.command.debug</parameter>
      <parameter key="console.command.symfony_bundle_twigbundle_command_lintcommand">twig.command.lint</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_containscommand">console.command.doctrine_bundle_doctrinecachebundle_command_containscommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_deletecommand">console.command.doctrine_bundle_doctrinecachebundle_command_deletecommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_flushcommand">console.command.doctrine_bundle_doctrinecachebundle_command_flushcommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_statscommand">console.command.doctrine_bundle_doctrinecachebundle_command_statscommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_createdatabasedoctrinecommand">doctrine.database_create_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_dropdatabasedoctrinecommand">doctrine.database_drop_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_generateentitiesdoctrinecommand">doctrine.generate_entities_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_importmappingdoctrinecommand">doctrine.mapping_import_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_clearmetadatacachedoctrinecommand">doctrine.cache_clear_metadata_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_clearquerycachedoctrinecommand">doctrine.cache_clear_query_cache_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_clearresultcachedoctrinecommand">doctrine.cache_clear_result_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_collectionregiondoctrinecommand">doctrine.cache_collection_region_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_convertmappingdoctrinecommand">doctrine.mapping_convert_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_createschemadoctrinecommand">doctrine.schema_create_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_dropschemadoctrinecommand">doctrine.schema_drop_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_ensureproductionsettingsdoctrinecommand">doctrine.ensure_production_settings_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_entityregioncachedoctrinecommand">doctrine.clear_entity_region_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_importdoctrinecommand">doctrine.database_import_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_infodoctrinecommand">doctrine.mapping_info_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_queryregioncachedoctrinecommand">doctrine.clear_query_region_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_rundqldoctrinecommand">doctrine.query_dql_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_runsqldoctrinecommand">doctrine.query_sql_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_updateschemadoctrinecommand">doctrine.schema_update_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_validateschemacommand">doctrine.schema_validate_command</parameter>
      <parameter key="console.command.sonata_corebundle_command_sonatadumpdoctrinemetacommand">console.command.sonata_corebundle_command_sonatadumpdoctrinemetacommand</parameter>
      <parameter key="console.command.sonata_corebundle_command_sonatalistformmappingcommand">console.command.sonata_corebundle_command_sonatalistformmappingcommand</parameter>
      <parameter key="console.command.sonata_blockbundle_command_debugblockscommand">console.command.sonata_blockbundle_command_debugblockscommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_createclasscachecommand">Sonata\AdminBundle\Command\CreateClassCacheCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_explainadmincommand">Sonata\AdminBundle\Command\ExplainAdminCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_generateadmincommand">Sonata\AdminBundle\Command\GenerateAdminCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_generateobjectaclcommand">Sonata\AdminBundle\Command\GenerateObjectAclCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_listadmincommand">Sonata\AdminBundle\Command\ListAdminCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_setupaclcommand">Sonata\AdminBundle\Command\SetupAclCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_addmassmediacommand">Sonata\MediaBundle\Command\AddMassMediaCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_addmediacommand">Sonata\MediaBundle\Command\AddMediaCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_cleanmediacommand">Sonata\MediaBundle\Command\CleanMediaCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_fixmediacontextcommand">Sonata\MediaBundle\Command\FixMediaContextCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_migratetojsontypecommand">Sonata\MediaBundle\Command\MigrateToJsonTypeCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_refreshmetadatacommand">Sonata\MediaBundle\Command\RefreshMetadataCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_removethumbscommand">Sonata\MediaBundle\Command\RemoveThumbsCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_syncthumbscommand">Sonata\MediaBundle\Command\SyncThumbsCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_updatecdnstatuscommand">Sonata\MediaBundle\Command\UpdateCdnStatusCommand</parameter>
      <parameter key="console.command.sonata_easyextendsbundle_command_dumpmappingcommand">Sonata\EasyExtendsBundle\Command\DumpMappingCommand</parameter>
      <parameter key="console.command.sonata_easyextendsbundle_command_generatecommand">Sonata\EasyExtendsBundle\Command\GenerateCommand</parameter>
      <parameter key="console.command.fos_userbundle_command_activateusercommand">fos_user.command.activate_user</parameter>
      <parameter key="console.command.fos_userbundle_command_changepasswordcommand">fos_user.command.change_password</parameter>
      <parameter key="console.command.fos_userbundle_command_createusercommand">fos_user.command.create_user</parameter>
      <parameter key="console.command.fos_userbundle_command_deactivateusercommand">fos_user.command.deactivate_user</parameter>
      <parameter key="console.command.fos_userbundle_command_demoteusercommand">fos_user.command.demote_user</parameter>
      <parameter key="console.command.fos_userbundle_command_promoteusercommand">fos_user.command.promote_user</parameter>
      <parameter key="console.command.sensiolabs_security_command_securitycheckercommand">sensio_distribution.security_checker.command</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverruncommand">web_server.command.server_run</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverstartcommand">web_server.command.server_start</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverstopcommand">web_server.command.server_stop</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverstatuscommand">web_server.command.server_status</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverlogcommand">web_server.command.server_log</parameter>
    </parameter>
    <parameter key="console.lazy_command.ids" type="collection">
      <parameter key="console.command.about">true</parameter>
      <parameter key="console.command.assets_install">true</parameter>
      <parameter key="console.command.cache_clear">true</parameter>
      <parameter key="console.command.cache_pool_clear">true</parameter>
      <parameter key="console.command.cache_pool_prune">true</parameter>
      <parameter key="console.command.cache_warmup">true</parameter>
      <parameter key="console.command.config_debug">true</parameter>
      <parameter key="console.command.config_dump_reference">true</parameter>
      <parameter key="console.command.container_debug">true</parameter>
      <parameter key="console.command.debug_autowiring">true</parameter>
      <parameter key="console.command.event_dispatcher_debug">true</parameter>
      <parameter key="console.command.router_debug">true</parameter>
      <parameter key="console.command.router_match">true</parameter>
      <parameter key="console.command.translation_debug">true</parameter>
      <parameter key="console.command.translation_update">true</parameter>
      <parameter key="console.command.xliff_lint">true</parameter>
      <parameter key="console.command.yaml_lint">true</parameter>
      <parameter key="console.command.form_debug">true</parameter>
      <parameter key="security.command.init_acl">true</parameter>
      <parameter key="security.command.set_acl">true</parameter>
      <parameter key="security.command.user_password_encoder">true</parameter>
      <parameter key="twig.command.debug">true</parameter>
      <parameter key="twig.command.lint">true</parameter>
      <parameter key="doctrine.database_create_command">true</parameter>
      <parameter key="doctrine.database_drop_command">true</parameter>
      <parameter key="doctrine.generate_entities_command">true</parameter>
      <parameter key="doctrine.mapping_import_command">true</parameter>
      <parameter key="doctrine.cache_clear_metadata_command">true</parameter>
      <parameter key="doctrine.cache_clear_query_cache_command">true</parameter>
      <parameter key="doctrine.cache_clear_result_command">true</parameter>
      <parameter key="doctrine.cache_collection_region_command">true</parameter>
      <parameter key="doctrine.mapping_convert_command">true</parameter>
      <parameter key="doctrine.schema_create_command">true</parameter>
      <parameter key="doctrine.schema_drop_command">true</parameter>
      <parameter key="doctrine.ensure_production_settings_command">true</parameter>
      <parameter key="doctrine.clear_entity_region_command">true</parameter>
      <parameter key="doctrine.database_import_command">true</parameter>
      <parameter key="doctrine.mapping_info_command">true</parameter>
      <parameter key="doctrine.clear_query_region_command">true</parameter>
      <parameter key="doctrine.query_dql_command">true</parameter>
      <parameter key="doctrine.query_sql_command">true</parameter>
      <parameter key="doctrine.schema_update_command">true</parameter>
      <parameter key="doctrine.schema_validate_command">true</parameter>
      <parameter key="fos_user.command.activate_user">true</parameter>
      <parameter key="fos_user.command.change_password">true</parameter>
      <parameter key="fos_user.command.create_user">true</parameter>
      <parameter key="fos_user.command.deactivate_user">true</parameter>
      <parameter key="fos_user.command.demote_user">true</parameter>
      <parameter key="fos_user.command.promote_user">true</parameter>
      <parameter key="sensio_distribution.security_checker.command">true</parameter>
      <parameter key="web_server.command.server_run">true</parameter>
      <parameter key="web_server.command.server_start">true</parameter>
      <parameter key="web_server.command.server_stop">true</parameter>
      <parameter key="web_server.command.server_status">true</parameter>
      <parameter key="web_server.command.server_log">true</parameter>
    </parameter>
    <parameter key="sonata.core.form.types" type="collection">
      <parameter>form.type.form</parameter>
      <parameter>form.type.choice</parameter>
      <parameter>form.type.entity</parameter>
      <parameter>sonata.core.form.type.array</parameter>
      <parameter>sonata.core.form.type.boolean</parameter>
      <parameter>sonata.core.form.type.collection</parameter>
      <parameter>sonata.core.form.type.translatable_choice</parameter>
      <parameter>sonata.core.form.type.date_range</parameter>
      <parameter>sonata.core.form.type.datetime_range</parameter>
      <parameter>sonata.core.form.type.date_picker</parameter>
      <parameter>sonata.core.form.type.datetime_picker</parameter>
      <parameter>sonata.core.form.type.date_range_picker</parameter>
      <parameter>sonata.core.form.type.datetime_range_picker</parameter>
      <parameter>sonata.core.form.type.equal</parameter>
      <parameter>sonata.core.form.type.color_selector</parameter>
      <parameter>sonata.core.form.type.color</parameter>
      <parameter>sonata.block.form.type.block</parameter>
      <parameter>sonata.block.form.type.container_template</parameter>
      <parameter>sonata.admin.form.type.admin</parameter>
      <parameter>sonata.admin.form.type.model_choice</parameter>
      <parameter>sonata.admin.form.type.model_list</parameter>
      <parameter>sonata.admin.form.type.model_reference</parameter>
      <parameter>sonata.admin.form.type.model_hidden</parameter>
      <parameter>sonata.admin.form.type.model_autocomplete</parameter>
      <parameter>sonata.admin.form.type.collection</parameter>
      <parameter>sonata.admin.doctrine_orm.form.type.choice_field_mask</parameter>
      <parameter>sonata.admin.form.filter.type.number</parameter>
      <parameter>sonata.admin.form.filter.type.choice</parameter>
      <parameter>sonata.admin.form.filter.type.default</parameter>
      <parameter>sonata.admin.form.filter.type.date</parameter>
      <parameter>sonata.admin.form.filter.type.daterange</parameter>
      <parameter>sonata.admin.form.filter.type.datetime</parameter>
      <parameter>sonata.admin.form.filter.type.datetime_range</parameter>
      <parameter>sonata.media.form.type.media</parameter>
      <parameter>fos_user.username_form_type</parameter>
      <parameter>fos_user.profile.form.type</parameter>
      <parameter>fos_user.registration.form.type</parameter>
      <parameter>fos_user.change_password.form.type</parameter>
      <parameter>fos_user.resetting.form.type</parameter>
      <parameter>fos_user.group.form.type</parameter>
      <parameter>sonata.user.form.type.security_roles</parameter>
      <parameter>sonata.user.form.gender_list</parameter>
    </parameter>
    <parameter key="sonata.core.form.type_extensions" type="collection">
      <parameter>form.type_extension.form.http_foundation</parameter>
      <parameter>form.type_extension.form.validator</parameter>
      <parameter>form.type_extension.repeated.validator</parameter>
      <parameter>form.type_extension.submit.validator</parameter>
      <parameter>form.type_extension.upload.validator</parameter>
      <parameter>form.type_extension.csrf</parameter>
      <parameter>form.type_extension.form.data_collector</parameter>
      <parameter>sonata.admin.form.extension.field</parameter>
      <parameter>sonata.admin.form.extension.field.mopa</parameter>
      <parameter>sonata.admin.form.extension.choice</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="100"/>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="service_locator.sr6ctxe"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-100"/>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-150"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="controller_name_converter"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged" tag="kernel.cache_warmer"/>
    </service>
    <service id="kernel.class_cache.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer">
      <argument type="collection">
        <argument>Symfony\Component\HttpFoundation\ParameterBag</argument>
        <argument>Symfony\Component\HttpFoundation\HeaderBag</argument>
        <argument>Symfony\Component\HttpFoundation\FileBag</argument>
        <argument>Symfony\Component\HttpFoundation\ServerBag</argument>
        <argument>Symfony\Component\HttpFoundation\Request</argument>
        <argument>Symfony\Component\HttpKernel\Kernel</argument>
      </argument>
      <deprecated>The "%service_id%" option is deprecated since version 3.3, to be removed in 4.0.</deprecated>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged" tag="kernel.cache_clearer"/>
    </service>
    <service id="kernel" public="true" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/Users/drolya/Public/visualmasters/app/Resources</argument>
      <argument type="collection">
        <argument>/Users/drolya/Public/visualmasters/app</argument>
      </argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="profiler">reset</argument>
        <argument key="debug.validator">reset</argument>
        <argument key="debug.stopwatch">reset</argument>
        <argument key="security.token_storage">setToken</argument>
        <argument key="form.type.entity">reset</argument>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id="service_locator.o0cobhk"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/Users/drolya/Public/visualmasters/translations</argument>
      <argument>/Users/drolya/Public/visualmasters/templates</argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>/Users/drolya/Public/visualmasters/translations</argument>
      <argument>/Users/drolya/Public/visualmasters/templates</argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>Sonata\CoreBundle\Form\Type</argument>
        <argument>Sonata\BlockBundle\Form\Type</argument>
        <argument>Sonata\AdminBundle\Form\Type</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter</argument>
        <argument>Sonata\MediaBundle\Form\Type</argument>
        <argument>FOS\UserBundle\Form\Type</argument>
        <argument>Sonata\UserBundle\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>Sonata\CoreBundle\Form\Type\ImmutableArrayType</argument>
        <argument>Sonata\CoreBundle\Form\Type\BooleanType</argument>
        <argument>Sonata\CoreBundle\Form\Type\CollectionType</argument>
        <argument>Sonata\CoreBundle\Form\Type\TranslatableChoiceType</argument>
        <argument>Sonata\CoreBundle\Form\Type\DateRangeType</argument>
        <argument>Sonata\CoreBundle\Form\Type\DateTimeRangeType</argument>
        <argument>Sonata\CoreBundle\Form\Type\DatePickerType</argument>
        <argument>Sonata\CoreBundle\Form\Type\DateTimePickerType</argument>
        <argument>Sonata\CoreBundle\Form\Type\DateRangePickerType</argument>
        <argument>Sonata\CoreBundle\Form\Type\DateTimeRangePickerType</argument>
        <argument>Sonata\CoreBundle\Form\Type\EqualType</argument>
        <argument>Sonata\CoreBundle\Form\Type\ColorSelectorType</argument>
        <argument>Sonata\CoreBundle\Form\Type\ColorType</argument>
        <argument>Sonata\BlockBundle\Form\Type\ServiceListType</argument>
        <argument>Sonata\BlockBundle\Form\Type\ContainerTemplateType</argument>
        <argument>Sonata\AdminBundle\Form\Type\AdminType</argument>
        <argument>Sonata\AdminBundle\Form\Type\ModelType</argument>
        <argument>Sonata\AdminBundle\Form\Type\ModelListType</argument>
        <argument>Sonata\AdminBundle\Form\Type\ModelReferenceType</argument>
        <argument>Sonata\AdminBundle\Form\Type\ModelHiddenType</argument>
        <argument>Sonata\AdminBundle\Form\Type\ModelAutocompleteType</argument>
        <argument>Sonata\AdminBundle\Form\Type\CollectionType</argument>
        <argument>Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\NumberType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\ChoiceType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\DefaultType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\DateType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\DateRangeType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\DateTimeType</argument>
        <argument>Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType</argument>
        <argument>Sonata\MediaBundle\Form\Type\MediaType</argument>
        <argument>FOS\UserBundle\Form\Type\UsernameFormType</argument>
        <argument>FOS\UserBundle\Form\Type\ProfileFormType</argument>
        <argument>FOS\UserBundle\Form\Type\RegistrationFormType</argument>
        <argument>FOS\UserBundle\Form\Type\ChangePasswordFormType</argument>
        <argument>FOS\UserBundle\Form\Type\ResettingFormType</argument>
        <argument>FOS\UserBundle\Form\Type\GroupFormType</argument>
        <argument>Sonata\UserBundle\Form\Type\SecurityRolesType</argument>
        <argument>Sonata\UserBundle\Form\Type\UserGenderListType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</argument>
        <argument>Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension</argument>
        <argument>Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension</argument>
        <argument>Sonata\AdminBundle\Form\Extension\ChoiceTypeExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false"/>
    <service id="2_ServiceLocator~5sqlvar" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="1_NativeFileSessionHandler~5sqlvar" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/Users/drolya/Public/visualmasters/var/sessions/dev</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
      <argument type="service" id="session.attribute_bag"/>
      <argument type="service" id="session.flash_bag"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id="1_NativeFileSessionHandler~5sqlvar"/>
    </service>
    <service id="session.handler.write_check" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\WriteCheckSessionHandler" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.4 and will be removed in 4.0. Use the `session.lazy_write` ini setting instead.</deprecated>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="2_ServiceLocator~5sqlvar"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service" id="1_ResolvedFormTypeFactory~6e5j_2c"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="true">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.range" class="Symfony\Component\Form\Extension\Core\Type\RangeType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\RepeatedType" extended-type="Symfony\Component\Form\Extension\Core\Type\RepeatedType"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="deprecated.form.registry" class="stdClass">
      <property name="registry" type="collection"/>
      <deprecated>The service "%service_id%" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0</deprecated>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="deprecated.form.registry.csrf" class="stdClass">
      <property name="registry" type="collection"/>
      <deprecated>The service "%service_id%" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0</deprecated>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="templating.engine.delegating" class="Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection"/>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev</argument>
    </service>
    <service id="templating.finder" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="templating.filename_parser"/>
      <argument>/Users/drolya/Public/visualmasters/app/Resources</argument>
    </service>
    <service id="templating.cache_warmer.template_paths" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="20"/>
      <argument type="service" id="templating.finder"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.filesystem" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader" public="false">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.cache" class="Symfony\Component\Templating\Loader\CacheLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <argument type="service" id="templating.loader.wrapped"/>
      <argument>null</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id="templating.loader.chain" class="Symfony\Component\Templating\Loader\ChainLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id="2_ApcCache~hrze30f" class="Doctrine\Common\Cache\ApcCache" public="false">
      <call method="setNamespace">
        <argument></argument>
      </call>
    </service>
    <service id="1_PhpArrayAdapter~hrze30f" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml</argument>
          <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/config/validation.xml</argument>
          <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
          <argument type="service" id="fos_user.validator.initializer"/>
        </argument>
      </call>
      <call method="addXmlMapping">
        <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/DependencyInjection/Compiler/../../Resources/config/storage-validation/orm.xml</argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id="1_PhpArrayAdapter~hrze30f"/>
    </service>
    <service id="validator.mapping.cache.doctrine.apc" class="Symfony\Component\Validator\Mapping\Cache\DoctrineCache" public="false">
      <argument type="service" id="2_ApcCache~hrze30f"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.4 and will be removed in 4.0. Use a Psr6 cache like "validator.mapping.cache.symfony" instead.</deprecated>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id="service_locator.5z417li"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_locator.yepb.pt"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/drolya/Public/visualmasters/var/cache/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.af.yml</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ar.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.ar.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ar.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ar.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ar.yml</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.bg.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.bg.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.bg.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.bg.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.bg.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.bg.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.bg.xliff</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ca.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.ca.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ca.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.ca.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ca.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ca.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.ca.xliff</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.cs.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.cs.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.cs.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.cs.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.cs.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.cs.xliff</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.da.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.da.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.da.yml</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.de.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.de.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.de.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/translations/validators.de.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.de.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.de.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.de.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.de.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.de.xliff</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.el.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.el.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.el.yml</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.en.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.en.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.en.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/translations/validators.en.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.en.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.en.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.en.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.en.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.en.xliff</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.es.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.es.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.es.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.es.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.es.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.es.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.es.xliff</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.et.yml</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.eu.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.eu.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.eu.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.eu.yml</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fa.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.fa.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.fa.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.fa.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fa.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fa.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.fa.xliff</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.fi.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.fi.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fi.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fi.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.fi.xliff</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fr.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.fr.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.fr.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/translations/validators.fr.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.fr.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.fr.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fr.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fr.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.fr.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/src/GalleryBundle/Resources/translations/messages.fr.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/src/LandingBundle/Resources/translations/messages.fr.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/src/SiteBundle/Resources/translations/messages.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.gl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.gl.yml</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.he.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.he.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.he.yml</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hr.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.hr.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.hr.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.hr.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.hr.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.hr.xliff</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hu.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.hu.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.hu.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.hu.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.hu.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.hu.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.hu.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.hu.xliff</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.id.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.id.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.id.yml</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.it.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.it.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.it.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.it.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.it.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.it.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.it.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.it.xliff</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ja.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.ja.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ja.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.ja.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ja.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ja.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.ja.xliff</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lb.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.lb.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.lb.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lb.yml</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lt.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.lt.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.lt.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.lt.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lt.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.lt.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.lt.xliff</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lv.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.lv.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lv.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.lv.yml</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nb.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nb.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.nb.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.nb.yml</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.nl.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.nl.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.nl.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.nl.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.nl.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.nl.xliff</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nn.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.no.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.no.xliff</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.pl.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.pl.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.pl.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pl.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pl.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.pl.xliff</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.pt.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.pt.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pt.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pt.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.pt.xliff</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_BR.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.pt_BR.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.pt_BR.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.pt_BR.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pt_BR.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pt_BR.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.pt_BR.xliff</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ro.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.ro.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ro.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.ro.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ro.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ro.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.ro.xliff</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ru.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.ru.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/translations/SonataBlockBundle.ru.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.ru.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.ru.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ru.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ru.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/FOSUserBundle.ru.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.ru.xliff</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sk.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.sk.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.sk.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sk.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sk.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.sk.xliff</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.sl.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.sl.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.sl.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sl.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sl.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.sl.xliff</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Latn.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sr_Latn.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sr_Latn.yml</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sv.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sv.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sv.yml</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.th.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.th.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.th.yml</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.tl.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tr.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.tr.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.tr.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.tr.yml</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.uk.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.uk.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/translations/SonataMediaBundle.uk.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.uk.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.uk.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.uk.xliff</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.vi.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.vi.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.vi.yml</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.zh_CN.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/translations/SonataCoreBundle.zh_CN.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.zh_CN.xliff</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.zh_CN.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.zh_CN.yml</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/translations/SonataUserBundle.zh_TW.xliff</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_PT.xlf</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ua.xlf</argument>
          </argument>
          <argument key="sv_SE" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/translations/SonataAdminBundle.sv_SE.xliff</argument>
          </argument>
          <argument key="bn" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.bn.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.bn.yml</argument>
          </argument>
          <argument key="bn_BD" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.bn_BD.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.bn_BD.yml</argument>
          </argument>
          <argument key="eo" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.eo.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.eo.yml</argument>
          </argument>
          <argument key="ky" type="collection">
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ky.yml</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ky.yml</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="translator.selector"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.4 and will be removed in 4.0. Use "translation.reader" instead.</deprecated>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" key="translator" id="translator.logging.inner"/>
      <tag name="container.service_subscriber.locator" id="service_locator.s.m3yzc.translation.warmer"/>
      <argument type="service" id="service_locator.s.m3yzc.translation.warmer"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="swiftmailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service" id="sonata.block.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
      <argument>file:/Users/drolya/Public/visualmasters/var/cache/dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Bundle\FrameworkBundle\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/appDevDebugProjectContainer</argument>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
    </service>
    <service id="1_ResolvedFormTypeFactory~6e5j_2c" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator" public="false">
      <argument type="service" id="translator.logging"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="cache_connection.gd_mszc" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache_connection.jke6kex" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>-1</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/Users/drolya/Public/visualmasters</argument>
      <argument type="service" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sonata.block.cache.handler.default"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="resolve_controller_name_subscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session.save_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fragment.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>48</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.security.implicit_login</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.security.interactive_login_listener"/>
          <argument>onImplicitLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.security.interactive_login_listener"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.authentication"/>
          <argument>authenticate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.confirmed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.authentication"/>
          <argument>authenticate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.authentication"/>
          <argument>authenticate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.change_password.edit.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.group.create.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.group.delete.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.group.edit.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.profile.edit.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.initialize</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.resetting"/>
          <argument>onResettingResetInitialize</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.success</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.resetting"/>
          <argument>onResettingResetSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.resetting"/>
          <argument>onResettingResetRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false"/>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.service"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_dir"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sonata.admin.route_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="routing.resolver"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <argument type="service" id="service_container"/>
      <argument>/Users/drolya/Public/visualmasters/app/config/routing_dev.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/drolya/Public/visualmasters/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appDevDebugProjectContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appDevDebugProjectContainerUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument>my/path</argument>
      <argument>GET</argument>
      <argument>host.com</argument>
      <argument>https</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber.locator" id="service_locator.lluwcxp.router.cache_warmer"/>
      <argument type="service" id="service_locator.lluwcxp.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/Users/drolya/Public/visualmasters</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
      <argument type="service" id="templating.engine.twig" on-invalid="ignore"/>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="2_PhpArrayAdapter~psxrd22" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="1_ArrayCache~psxrd22" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id="1_ArrayCache~psxrd22"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!AbstractController$|Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id="2_PhpArrayAdapter~psxrd22"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
    </service>
    <service id="1_ServiceLocator~ctmhces" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="true">
      <tag name="kernel.reset" method="setToken"/>
    </service>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id="1_ServiceLocator~ctmhces"/>
    </service>
    <service id="security.user_value_resolver" class="Symfony\Bundle\SecurityBundle\SecurityUserValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.dao.admin"/>
        <argument type="service" id="security.authentication.provider.anonymous.admin"/>
        <argument type="service" id="security.authentication.provider.dao.main"/>
        <argument type="service" id="security.authentication.provider.anonymous.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="FOS\UserBundle\Model\UserInterface" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>13</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id="service_locator.zwnb1bl"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id="security.request_matcher.zfhj2lw"/>
        <argument key="security.firewall.map.context.admin" type="service" id="security.request_matcher.6xxs_ip"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.request_matcher.gt2qimv"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>admin</argument>
        <argument>/admin/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>user</argument>
      </call>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>user</argument>
      </call>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Security\Core\User\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.authentication.digest_entry_point" class="Symfony\Component\Security\Http\EntryPoint\DigestAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id="security.request_matcher.jjmzzqg"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.bpx0ytz"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.ultp5x6"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.n.wpu8s"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.x0_yxqh"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.p1bsrzn"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="fos_user.user_provider.username"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.digest" class="Symfony\Component\Security\Http\Firewall\DigestAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>null</argument>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.zfhj2lw</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.request_matcher.zfhj2lw" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>admin</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.6xxs_ip</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>fos_user.user_provider.username</argument>
      <argument>user</argument>
      <argument>security.authentication.form_entry_point.admin</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>logout</argument>
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="security.request_matcher.6xxs_ip" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/admin(.*)</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="fos_user.user_provider.username"/>
      </argument>
      <argument>user</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <call method="setLogoutOnUserChange">
        <argument>false</argument>
      </call>
    </service>
    <service id="security.logout_listener.admin" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.admin"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/admin/logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.logout.success_handler.admin" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>/admin/login</argument>
    </service>
    <service id="security.authentication.provider.dao.admin" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="fos_user.user_provider.username"/>
      <argument type="service" id="security.user_checker"/>
      <argument>admin</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.admin.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/admin/login</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="default_target_path">/</argument>
          <argument key="target_path_parameter">_target_path</argument>
          <argument key="use_referer">false</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>admin</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.admin.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/admin/login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.admin" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="admin" provider="fos_user.user_provider.username"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin</argument>
      <argument type="service" id="security.authentication.success_handler.admin.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.admin.form_login"/>
      <argument type="collection">
        <argument key="use_forward">false</argument>
        <argument key="check_path">/admin/login_check</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="security.authentication.form_entry_point.admin" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/admin/login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.admin" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.admin" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.admin" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin</argument>
      <argument type="service" id="security.authentication.form_entry_point.admin"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.logout_listener.admin"/>
        <argument type="service" id="security.authentication.listener.form.admin"/>
        <argument type="service" id="security.authentication.listener.anonymous.admin"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.admin"/>
      <argument type="service" id="security.firewall.map.config.admin"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.gt2qimv</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>fos_user.user_provider.username</argument>
      <argument>user</argument>
      <argument>security.authentication.form_entry_point.main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>logout</argument>
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="security.request_matcher.gt2qimv" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>.*</argument>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.logout.success_handler.main" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.provider.dao.main" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="fos_user.user_provider.username"/>
      <argument type="service" id="security.user_checker"/>
      <argument>main</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/login</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="default_target_path">/</argument>
          <argument key="target_path_parameter">_target_path</argument>
          <argument key="use_referer">false</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>main</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.main" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="fos_user.user_provider.username"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.success_handler.main.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.main.form_login"/>
      <argument type="collection">
        <argument key="use_forward">false</argument>
        <argument key="check_path">/login_check</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="security.authentication.form_entry_point.main" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.main" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.form_entry_point.main"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.logout_listener.main"/>
        <argument type="service" id="security.authentication.listener.form.main"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id="service_locator.zwnb1bl" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.admin" type="service" id="security.firewall.map.context.admin"/>
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id="security.request_matcher.jjmzzqg" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/login$</argument>
    </service>
    <service id="security.request_matcher.bpx0ytz" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/logout$</argument>
    </service>
    <service id="security.request_matcher.ultp5x6" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/login_check$</argument>
    </service>
    <service id="security.request_matcher.n.wpu8s" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/resetting</argument>
    </service>
    <service id="security.request_matcher.x0_yxqh" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/</argument>
    </service>
    <service id="security.request_matcher.p1bsrzn" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/.*</argument>
    </service>
    <service id="security.command.init_acl" class="Symfony\Bundle\SecurityBundle\Command\InitAclCommand" public="false">
      <tag name="console.command" command="init:acl"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="security.acl.dbal.schema"/>
      <call method="setName">
        <argument>init:acl</argument>
      </call>
    </service>
    <service id="security.command.set_acl" class="Symfony\Bundle\SecurityBundle\Command\SetAclCommand" public="false">
      <tag name="console.command" command="acl:set"/>
      <argument type="service" id="security.acl.dbal.provider"/>
      <call method="setName">
        <argument>acl:set</argument>
      </call>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>FOS\UserBundle\Model\UserInterface</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id="security.acl.object_identity_retrieval_strategy" class="Symfony\Component\Security\Acl\Domain\ObjectIdentityRetrievalStrategy" public="false"/>
    <service id="security.acl.security_identity_retrieval_strategy" class="Symfony\Component\Security\Acl\Domain\SecurityIdentityRetrievalStrategy" public="false">
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.acl.permission_granting_strategy" class="Symfony\Component\Security\Acl\Domain\PermissionGrantingStrategy" public="false"/>
    <service id="security.acl.permission.map" class="Symfony\Component\Security\Acl\Permission\BasicPermissionMap" public="false"/>
    <service id="security.acl.voter.basic_permissions" class="Symfony\Component\Security\Acl\Voter\AclVoter" public="false">
      <tag name="monolog.logger" channel="security"/>
      <tag name="security.voter" priority="255"/>
      <argument type="service" id="security.acl.dbal.provider"/>
      <argument type="service" id="security.acl.object_identity_retrieval_strategy"/>
      <argument type="service" id="security.acl.security_identity_retrieval_strategy"/>
      <argument type="service" id="security.acl.permission.map"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.acl.dbal.provider" class="Symfony\Component\Security\Acl\Dbal\MutableAclProvider" public="false">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="security.acl.permission_granting_strategy"/>
      <argument type="collection">
        <argument key="class_table_name">acl_classes</argument>
        <argument key="entry_table_name">acl_entries</argument>
        <argument key="oid_table_name">acl_object_identities</argument>
        <argument key="oid_ancestors_table_name">acl_object_identity_ancestors</argument>
        <argument key="sid_table_name">acl_security_identities</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="security.acl.dbal.schema" class="Symfony\Component\Security\Acl\Dbal\Schema">
      <argument type="collection">
        <argument key="class_table_name">acl_classes</argument>
        <argument key="entry_table_name">acl_entries</argument>
        <argument key="oid_table_name">acl_object_identities</argument>
        <argument key="oid_ancestors_table_name">acl_object_identity_ancestors</argument>
        <argument key="sid_table_name">acl_security_identities</argument>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="security.acl.dbal.schema_listener" class="Symfony\Bundle\SecurityBundle\EventListener\AclSchemaListener" public="true">
      <tag name="doctrine.event_listener" connection="default" event="postGenerateSchema" lazy="1"/>
      <argument type="service" id="security.acl.dbal.schema"/>
    </service>
    <service id="security.acl.cache.doctrine" class="Symfony\Component\Security\Acl\Domain\DoctrineAclCache" public="false">
      <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
      <argument type="service" id="security.acl.permission_granting_strategy"/>
      <argument>sf2_acl_</argument>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.filesystem"/>
      <argument type="collection">
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
          <argument>@SonataUser/Form/form_admin_fields.html.twig</argument>
        </argument>
        <argument key="paths" type="collection">
          <argument key="/Users/drolya/Public/visualmasters/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views">null</argument>
        </argument>
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="exception_controller">twig.controller.exception:showAction</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/Users/drolya/Public/visualmasters/var/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="default_path">/Users/drolya/Public/visualmasters/templates</argument>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="assetic.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.flashmessage.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.wrapping"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.text"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.status_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.deprecated_template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.block.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="knp_menu.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.templates.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.media.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="jms_serializer.twig_extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="app.gallery.unserialize_filter"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_block</argument>
        <argument type="service" id="sonata.block.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_admin</argument>
        <argument type="service" id="sonata.admin.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_media</argument>
        <argument type="service" id="sonata.media.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_user</argument>
        <argument type="service" id="sonata.user.twig.global"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.service_subscriber.locator" id="service_locator.c7_qahl.twig.cache_warmer"/>
      <argument type="service" id="service_locator.c7_qahl.twig.cache_warmer"/>
      <argument type="service" id="templating.finder" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="/Users/drolya/Public/visualmasters/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views">null</argument>
        <argument key="/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form">null</argument>
      </argument>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/Users/drolya/Public/visualmasters/app</argument>
      <argument type="collection">
        <argument key="/Users/drolya/Public/visualmasters/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views">null</argument>
        <argument key="/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form">null</argument>
      </argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.service_subscriber.locator" id="service_locator.2m3e4be.twig.template_cache_warmer"/>
      <argument type="service" id="service_locator.2m3e4be.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader" public="false">
      <argument type="collection"/>
      <argument>/Users/drolya/Public/visualmasters</argument>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/views</argument>
        <argument>!SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/views</argument>
        <argument>!SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/knplabs/knp-menu-bundle/src/Resources/views</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/knplabs/knp-menu-bundle/src/Resources/views</argument>
        <argument>!KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/doctrine-orm-admin-bundle/src/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/doctrine-orm-admin-bundle/src/Resources/views</argument>
        <argument>!SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/app/Resources/SonataAdminBundle/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/views</argument>
        <argument>!SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/Application/Sonata/MediaBundle/Resources/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/views</argument>
        <argument>!SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/Application/Sonata/MediaBundle/Resources/views</argument>
        <argument>ApplicationSonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
        <argument>!FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/views</argument>
        <argument>!SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/GalleryBundle/Resources/views</argument>
        <argument>Gallery</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/GalleryBundle/Resources/views</argument>
        <argument>!Gallery</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/LandingBundle/Resources/views</argument>
        <argument>Landing</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/LandingBundle/Resources/views</argument>
        <argument>!Landing</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/SiteBundle/Resources/views</argument>
        <argument>Site</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/SiteBundle/Resources/views</argument>
        <argument>!Site</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/Users/drolya/Public/visualmasters/app</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false"/>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception:showAction</argument>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id="service_locator.sng9lji"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>twig.form.renderer</argument>
      </argument>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.loader.filesystem" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <argument>/Users/drolya/Public/visualmasters</argument>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/core-bundle/src/Resources/views</argument>
        <argument>!SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/views</argument>
        <argument>!SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/knplabs/knp-menu-bundle/src/Resources/views</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/knplabs/knp-menu-bundle/src/Resources/views</argument>
        <argument>!KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/doctrine-orm-admin-bundle/src/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/doctrine-orm-admin-bundle/src/Resources/views</argument>
        <argument>!SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/app/Resources/SonataAdminBundle/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/views</argument>
        <argument>!SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/Application/Sonata/MediaBundle/Resources/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/views</argument>
        <argument>!SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/Application/Sonata/MediaBundle/Resources/views</argument>
        <argument>ApplicationSonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
        <argument>!FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/views</argument>
        <argument>!SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/GalleryBundle/Resources/views</argument>
        <argument>Gallery</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/GalleryBundle/Resources/views</argument>
        <argument>!Gallery</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/LandingBundle/Resources/views</argument>
        <argument>Landing</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/LandingBundle/Resources/views</argument>
        <argument>!Landing</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/SiteBundle/Resources/views</argument>
        <argument>Site</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/src/SiteBundle/Resources/views</argument>
        <argument>!Site</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/Users/drolya/Public/visualmasters/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="templating.engine.twig" class="Symfony\Bundle\TwigBundle\TwigEngine" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>/Users/drolya/Public/visualmasters</argument>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <argument>/Users/drolya/Public/visualmasters/var/logs/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="monolog.handler.server_log" class="Symfony\Bridge\Monolog\Handler\ServerLogHandler">
      <argument>127.0.0.1:9911</argument>
      <argument>100</argument>
      <argument>true</argument>
    </service>
    <service id="3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~cn4ztkn" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
    <service id="2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~cn4ztkn" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
    <service id="1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~cn4ztkn" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" public="true" abstract="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.mail.abstract" class="Swift_Transport_MailTransport" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.mailinvoker"/>
    </service>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport" public="false"/>
    <service id="swiftmailer.transport.mailinvoker" class="Swift_Transport_SimpleMailInvoker" public="false"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" public="false" abstract="true">
      <argument type="collection">
        <argument type="service" id="1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~cn4ztkn"/>
        <argument type="service" id="2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~cn4ztkn"/>
        <argument type="service" id="3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~cn4ztkn"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" public="false" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" public="false" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" public="false" abstract="true">
      <argument>/Users/drolya/Public/visualmasters/app/../data/swiftmailer/spool</argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" public="false" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default.transport.authhandler" class="Swift_Transport_Esmtp_AuthHandler" public="false">
      <argument type="collection">
        <argument type="service" id="1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~cn4ztkn"/>
        <argument type="service" id="2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~cn4ztkn"/>
        <argument type="service" id="3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~cn4ztkn"/>
      </argument>
      <call method="setUsername">
        <argument>test@test.com</argument>
      </call>
      <call method="setPassword">
        <argument>null</argument>
      </call>
      <call method="setAuthMode">
        <argument>null</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.buffer" class="Swift_Transport_StreamBuffer" public="false">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.configurator.default" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false">
      <argument>null</argument>
      <argument type="service" id="router.request_context" on-invalid="null"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.smtp" class="Swift_Transport_EsmtpTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.buffer"/>
      <argument type="collection">
        <argument type="service" id="swiftmailer.mailer.default.transport.authhandler"/>
      </argument>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <call method="setHost">
        <argument>127.0.0.1</argument>
      </call>
      <call method="setPort">
        <argument>25</argument>
      </call>
      <call method="setEncryption">
        <argument>null</argument>
      </call>
      <call method="setTimeout">
        <argument>30</argument>
      </call>
      <call method="setSourceIp">
        <argument>null</argument>
      </call>
      <configurator service="swiftmailer.transport.configurator.default" method="configure"/>
    </service>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer" public="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.mailer.default.spool.memory" class="Swift_MemorySpool" public="false"/>
    <service id="swiftmailer.mailer.default.transport.spool" class="Swift_Transport_SpoolTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool.memory"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger" public="true">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="doctrine_cache.abstract.apc" class="Doctrine\Common\Cache\ApcCache" abstract="true"/>
    <service id="doctrine_cache.abstract.apcu" class="Doctrine\Common\Cache\ApcuCache" abstract="true"/>
    <service id="doctrine_cache.abstract.array" class="Doctrine\Common\Cache\ArrayCache" abstract="true"/>
    <service id="doctrine_cache.abstract.chain" class="Doctrine\Common\Cache\ChainCache" abstract="true"/>
    <service id="doctrine_cache.abstract.couchbase" class="Doctrine\Common\Cache\CouchbaseCache" abstract="true"/>
    <service id="doctrine_cache.abstract.file_system" class="Doctrine\Common\Cache\FilesystemCache" abstract="true"/>
    <service id="doctrine_cache.abstract.php_file" class="Doctrine\Common\Cache\PhpFileCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcache" class="Doctrine\Common\Cache\MemcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcached" class="Doctrine\Common\Cache\MemcachedCache" abstract="true"/>
    <service id="doctrine_cache.abstract.mongodb" class="Doctrine\Common\Cache\MongoDBCache" abstract="true"/>
    <service id="doctrine_cache.abstract.redis" class="Doctrine\Common\Cache\RedisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.predis" class="Doctrine\Common\Cache\PredisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.riak" class="Doctrine\Common\Cache\RiakCache" abstract="true"/>
    <service id="doctrine_cache.abstract.sqlite3" class="Doctrine\Common\Cache\SQLite3Cache" abstract="true"/>
    <service id="doctrine_cache.abstract.void" class="Doctrine\Common\Cache\VoidCache" abstract="true"/>
    <service id="doctrine_cache.abstract.wincache" class="Doctrine\Common\Cache\WinCacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.xcache" class="Doctrine\Common\Cache\XcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.zenddata" class="Doctrine\Common\Cache\ZendDataCache" abstract="true"/>
    <service id="doctrine_cache.contains_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\ContainsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.delete_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\DeleteCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.flush_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\FlushCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.stats_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\StatsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument>%doctrine.dbal.connection_factory.types%</argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.generate_entities_command" class="Doctrine\Bundle\DoctrineBundle\Command\GenerateEntitiesDoctrineCommand">
      <tag name="console.command" command="doctrine:generate:entities"/>
      <call method="setName">
        <argument>doctrine:generate:entities</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id="service_container"/>
      <call method="addEventSubscriber">
        <argument type="service" id="sonata.easy_extends.doctrine.mapper"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="fos_user.user_listener"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="sonata.media.doctrine.event_subscriber"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postGenerateSchema</argument>
        </argument>
        <argument>security.acl.dbal.schema_listener</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">127.0.0.1</argument>
        <argument key="port">null</argument>
        <argument key="dbname">vm</argument>
        <argument key="user">root</argument>
        <argument key="password">root</argument>
        <argument key="charset">UTF8</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id="service_locator.sr6ctxe"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="SonataMediaBundle">Sonata\MediaBundle\Entity</argument>
          <argument key="ApplicationSonataMediaBundle">Application\Sonata\MediaBundle\Entity</argument>
          <argument key="SonataUserBundle">Sonata\UserBundle\Entity</argument>
          <argument key="GalleryBundle">GalleryBundle\Entity</argument>
          <argument key="LandingBundle">LandingBundle\Entity</argument>
          <argument key="SiteBundle">SiteBundle\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/Users/drolya/Public/visualmasters/var/cache/dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_xml_metadata_driver" class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
      <argument type="collection">
        <argument key="/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
        <argument key="/Users/drolya/Public/visualmasters/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
        <argument key="/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
      </argument>
      <call method="setGlobalBasename">
        <argument>mapping</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/Users/drolya/Public/visualmasters/src/GalleryBundle/Entity</argument>
        <argument>/Users/drolya/Public/visualmasters/src/LandingBundle/Entity</argument>
        <argument>/Users/drolya/Public/visualmasters/src/SiteBundle/Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>Sonata\MediaBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>Application\Sonata\MediaBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>Sonata\UserBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>GalleryBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>LandingBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>SiteBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service">
          <service class="Doctrine\ORM\Mapping\Driver\XmlDriver">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator">
                <argument type="collection">
                  <argument key="/Users/drolya/Public/visualmasters/vendor/friendsofsymfony/user-bundle/Resources/config/doctrine-mapping">FOS\UserBundle\Model</argument>
                </argument>
                <argument>.orm.xml</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument>FOS\UserBundle\Model</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache" public="true">
      <call method="setNamespace">
        <argument>sf_orm_default_521f8c63c148a9e9d05d6c7015a898ec2d79bfcc4da36fcb79e6278d07834a97</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache" public="true">
      <call method="setNamespace">
        <argument>sf_orm_default_521f8c63c148a9e9d05d6c7015a898ec2d79bfcc4da36fcb79e6278d07834a97</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache" public="true">
      <call method="setNamespace">
        <argument>sf_orm_default_521f8c63c148a9e9d05d6c7015a898ec2d79bfcc4da36fcb79e6278d07834a97</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.metadata_factory" class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
      <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager.metadata_factory"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_class" class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_dir" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter" public="false">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter" public="false">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <argument type="service" id="twig" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter" public="false">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="assetic.filter_manager" class="Symfony\Bundle\AsseticBundle\FilterManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="cssrewrite">assetic.filter.cssrewrite</argument>
        <argument key="yui_css">assetic.filter.yui_css</argument>
        <argument key="yui_js">assetic.filter.yui_js</argument>
      </argument>
    </service>
    <service id="assetic.asset_manager" class="Assetic\Factory\LazyAssetManager">
      <argument type="service" id="assetic.asset_factory"/>
      <argument type="collection">
        <argument key="twig" type="service" id="assetic.twig_formula_loader"/>
      </argument>
      <call method="addResource">
        <argument type="service" id="assetic.twig_directory_resource.SiteBundle"/>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service" id="assetic.twig_directory_resource.GalleryBundle"/>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service" id="assetic.twig_directory_resource.SonataAdminBundle"/>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service" id="assetic.twig_directory_resource.LandingBundle"/>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service" id="assetic.twig_directory_resource.kernel"/>
        <argument>twig</argument>
      </call>
    </service>
    <service id="assetic.asset_factory" class="Symfony\Bundle\AsseticBundle\Factory\AssetFactory" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="assetic.parameter_bag"/>
      <argument>/Users/drolya/Public/visualmasters/app/../web</argument>
      <argument>true</argument>
    </service>
    <service id="assetic.config_cache" class="Assetic\Cache\ConfigCache" public="false">
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/assetic/config</argument>
    </service>
    <service id="assetic.asset_manager_cache_warmer" class="Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="10"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="assetic.worker.ensure_filter" class="Assetic\Factory\Worker\EnsureFilterWorker" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assetic.worker.cache_busting" class="Assetic\Factory\Worker\CacheBustingWorker" public="false"/>
    <service id="assetic.parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ParameterBag" public="false">
      <factory service="service_container" method="getParameterBag"/>
    </service>
    <service id="assetic.value_supplier.default" class="Symfony\Bundle\AsseticBundle\DefaultValueSupplier" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="assetic.twig_extension" class="Symfony\Bundle\AsseticBundle\Twig\AsseticExtension" public="false">
      <tag name="twig.extension"/>
      <tag name="assetic.templating.twig"/>
      <argument type="service" id="assetic.asset_factory"/>
      <argument type="service" id="templating.name_parser"/>
      <argument>false</argument>
      <argument type="collection"/>
      <argument>%assetic.bundles%</argument>
      <argument type="service" id="assetic.value_supplier.default" on-invalid="null"/>
    </service>
    <service id="assetic.twig_formula_loader" class="Assetic\Factory\Loader\CachedFormulaLoader" public="false">
      <tag name="assetic.formula_loader" alias="twig"/>
      <tag name="assetic.templating.twig"/>
      <argument type="service" id="assetic.twig_formula_loader.real"/>
      <argument type="service" id="assetic.config_cache"/>
      <argument>true</argument>
    </service>
    <service id="assetic.twig_formula_loader.real" class="Assetic\Extension\Twig\TwigFormulaLoader" public="false">
      <tag name="assetic.templating.twig"/>
      <tag name="monolog.logger" channel="assetic"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="monolog.logger.assetic" on-invalid="ignore"/>
    </service>
    <service id="assetic.filter.cssrewrite" class="Assetic\Filter\CssRewriteFilter">
      <tag name="assetic.filter" alias="cssrewrite"/>
    </service>
    <service id="assetic.filter.yui_css" class="Assetic\Filter\Yui\CssCompressorFilter">
      <tag name="assetic.filter" alias="yui_css"/>
      <argument>/Users/drolya/Public/visualmasters/app/Resources/java/yuicompressor-2.4.8.jar</argument>
      <argument>/usr/bin/java</argument>
      <call method="setCharset">
        <argument>UTF-8</argument>
      </call>
      <call method="setTimeout">
        <argument>null</argument>
      </call>
      <call method="setStackSize">
        <argument>null</argument>
      </call>
      <call method="setLineBreak">
        <argument>null</argument>
      </call>
    </service>
    <service id="assetic.filter.yui_js" class="Assetic\Filter\Yui\JsCompressorFilter">
      <tag name="assetic.filter" alias="yui_js"/>
      <argument>/Users/drolya/Public/visualmasters/app/Resources/java/yuicompressor-2.4.8.jar</argument>
      <argument>/usr/bin/java</argument>
      <call method="setCharset">
        <argument>UTF-8</argument>
      </call>
      <call method="setTimeout">
        <argument>null</argument>
      </call>
      <call method="setStackSize">
        <argument>null</argument>
      </call>
      <call method="setNomunge">
        <argument>null</argument>
      </call>
      <call method="setPreserveSemi">
        <argument>null</argument>
      </call>
      <call method="setDisableOptimizations">
        <argument>null</argument>
      </call>
      <call method="setLineBreak">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.core.date.moment_format_converter" class="Sonata\CoreBundle\Date\MomentFormatConverter"/>
    <service id="sonata.core.flashmessage.manager" class="Sonata\CoreBundle\FlashMessage\FlashManager" public="true">
      <tag name="sonata.status.renderer"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="collection">
        <argument key="success" type="collection">
          <argument key="success" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_success" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_success" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
          <argument key="fos_user_success" type="collection">
            <argument key="domain">FOSUserBundle</argument>
          </argument>
        </argument>
        <argument key="warning" type="collection">
          <argument key="warning" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_info" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
        </argument>
        <argument key="danger" type="collection">
          <argument key="error" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_error" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_error" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="success">success</argument>
        <argument key="warning">warning</argument>
        <argument key="danger">danger</argument>
      </argument>
    </service>
    <service id="sonata.core.flashmessage.twig.extension" class="Sonata\CoreBundle\Twig\Extension\FlashMessageExtension" public="true">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.core.flashmessage.manager"/>
    </service>
    <service id="sonata.core.form.type.array" class="Sonata\CoreBundle\Form\Type\ImmutableArrayType">
      <tag name="form.type" alias="sonata_type_immutable_array"/>
    </service>
    <service id="sonata.core.form.type.boolean" class="Sonata\CoreBundle\Form\Type\BooleanType">
      <tag name="form.type" alias="sonata_type_boolean"/>
    </service>
    <service id="sonata.core.form.type.collection" class="Sonata\CoreBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_collection"/>
    </service>
    <service id="sonata.core.form.type.translatable_choice" class="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">
      <tag name="form.type" alias="sonata_type_translatable_choice"/>
      <argument type="service" id="translator.data_collector"/>
      <deprecated>The "%service_id%" service is deprecated since 2.2.0 and will be removed in 4.0.</deprecated>
    </service>
    <service id="sonata.core.form.type.date_range" class="Sonata\CoreBundle\Form\Type\DateRangeType">
      <tag name="form.type" alias="sonata_type_date_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.datetime_range" class="Sonata\CoreBundle\Form\Type\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_datetime_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.date_picker" class="Sonata\CoreBundle\Form\Type\DatePickerType">
      <tag name="form.type" alias="sonata_type_date_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.datetime_picker" class="Sonata\CoreBundle\Form\Type\DateTimePickerType">
      <tag name="form.type" alias="sonata_type_datetime_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.date_range_picker" class="Sonata\CoreBundle\Form\Type\DateRangePickerType">
      <tag name="form.type" alias="sonata_type_date_range_picker"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.datetime_range_picker" class="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">
      <tag name="form.type" alias="sonata_type_datetime_range_picker"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.equal" class="Sonata\CoreBundle\Form\Type\EqualType">
      <tag name="form.type" alias="sonata_type_equal"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.color_selector" class="Sonata\CoreBundle\Form\Type\ColorSelectorType">
      <tag name="form.type" alias="sonata_type_color_selector"/>
      <deprecated>The "%service_id%" service is deprecated since 3.5 and will be removed in 4.0.</deprecated>
    </service>
    <service id="sonata.core.form.type.color" class="Sonata\CoreBundle\Form\Type\ColorType">
      <tag name="form.type" alias="sonata_type_color"/>
    </service>
    <service id="sonata.core.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.core.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.core.twig.extension.wrapping" class="Sonata\CoreBundle\Twig\Extension\FormTypeExtension">
      <tag name="twig.extension"/>
      <argument>standard</argument>
    </service>
    <service id="sonata.core.twig.extension.text" class="Sonata\CoreBundle\Twig\Extension\DeprecatedTextExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.core.twig.status_extension" class="Sonata\CoreBundle\Twig\Extension\StatusExtension">
      <tag name="twig.extension"/>
      <call method="addStatusService">
        <argument type="service" id="sonata.core.flashmessage.manager"/>
      </call>
    </service>
    <service id="sonata.core.twig.deprecated_template_extension" class="Sonata\CoreBundle\Twig\Extension\DeprecatedTemplateExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.core.twig.template_extension" class="Sonata\CoreBundle\Twig\Extension\TemplateExtension">
      <tag name="twig.extension"/>
      <argument>true</argument>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="sonata.core.model.adapter.chain"/>
    </service>
    <service id="sonata.core.model.adapter.doctrine_orm" class="Sonata\CoreBundle\Model\Adapter\DoctrineORMAdapter" public="false">
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sonata.core.model.adapter.chain" class="Sonata\CoreBundle\Model\Adapter\AdapterChain" public="true">
      <call method="addAdapter">
        <argument type="service" id="sonata.core.model.adapter.doctrine_orm"/>
      </call>
    </service>
    <service id="sonata.core.slugify.cocur" class="Cocur\Slugify\Slugify" public="true">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.core.slugify.native" class="Sonata\CoreBundle\Component\NativeSlugify" public="true">
      <deprecated>The "%service_id%" service is deprecated since 2.3 and will be removed in 4.0.</deprecated>
    </service>
    <service id="Sonata\CoreBundle\Command\SonataDumpDoctrineMetaCommand" class="Sonata\CoreBundle\Command\SonataDumpDoctrineMetaCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\CoreBundle\Command\SonataListFormMappingCommand" class="Sonata\CoreBundle\Command\SonataListFormMappingCommand">
      <tag name="console.command"/>
    </service>
    <service id="sonata.block.service.container" class="Sonata\BlockBundle\Block\Service\ContainerBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.block.container</argument>
      <argument type="service" id="sonata.templating"/>
    </service>
    <service id="sonata.block.service.empty" class="Sonata\BlockBundle\Block\Service\EmptyBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.block.empty</argument>
      <argument type="service" id="sonata.templating"/>
    </service>
    <service id="sonata.block.service.text" class="Sonata\BlockBundle\Block\Service\TextBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.block.text</argument>
      <argument type="service" id="sonata.templating"/>
    </service>
    <service id="sonata.block.service.rss" class="Sonata\BlockBundle\Block\Service\RssBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.block.rss</argument>
      <argument type="service" id="sonata.templating"/>
    </service>
    <service id="sonata.block.service.menu" class="Sonata\BlockBundle\Block\Service\MenuBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.block.menu</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="sonata.block.menu.registry"/>
    </service>
    <service id="sonata.block.service.template" class="Sonata\BlockBundle\Block\Service\TemplateBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.block.template</argument>
      <argument type="service" id="sonata.templating"/>
    </service>
    <service id="sonata.block.form.type.block" class="Sonata\BlockBundle\Form\Type\ServiceListType">
      <tag name="form.type" alias="sonata_block_service_choice"/>
      <argument type="service" id="sonata.block.manager"/>
    </service>
    <service id="sonata.block.form.type.container_template" class="Sonata\BlockBundle\Form\Type\ContainerTemplateType">
      <tag name="form.type" alias="sonata_type_container_template_choice"/>
      <argument type="collection">
        <argument key="@SonataBlock/Block/block_container.html.twig">SonataBlockBundle default template</argument>
      </argument>
    </service>
    <service id="sonata.templating.locator" class="Sonata\BlockBundle\Templating\TemplateLocator">
      <argument type="service" id="file_locator"/>
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev</argument>
    </service>
    <service id="sonata.templating.name_parser" class="Sonata\BlockBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sonata.templating" class="Sonata\BlockBundle\Templating\TwigEngine">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.templating.name_parser"/>
      <argument type="service" id="sonata.templating.locator"/>
    </service>
    <service id="sonata.block.manager" class="Sonata\BlockBundle\Block\BlockServiceManager" public="true">
      <argument type="service" id="service_container"/>
      <argument>true</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <call method="add">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.container</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.empty</argument>
        <argument>sonata.block.service.empty</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.text</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.rss</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.menu</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.template</argument>
        <argument>sonata.block.service.template</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.admin_list</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.stats</argument>
        <argument>sonata.admin.block.stats</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.media</argument>
        <argument>sonata.media.block.media</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.feature_media</argument>
        <argument>sonata.media.block.feature_media</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.gallery</argument>
        <argument>sonata.media.block.gallery</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.gallery_list</argument>
        <argument>sonata.media.block.gallery_list</argument>
        <argument type="collection"/>
      </call>
    </service>
    <service id="sonata.block.menu.registry" class="Sonata\BlockBundle\Menu\MenuRegistry" public="true">
      <argument type="collection"/>
      <call method="add">
        <argument>sonata_admin_sidebar</argument>
      </call>
    </service>
    <service id="sonata.block.context_manager.default" class="Sonata\BlockBundle\Block\BlockContextManager" public="true">
      <argument type="service" id="sonata.block.loader.chain"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument>%sonata_block.cache_blocks%</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.renderer.default" class="Sonata\BlockBundle\Block\BlockRenderer" public="true">
      <argument type="service" id="sonata.block.manager"/>
      <argument type="service" id="sonata.block.exception.strategy.manager"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="sonata.block.twig.extension" class="Sonata\BlockBundle\Twig\Extension\BlockExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.block.templating.helper"/>
    </service>
    <service id="sonata.block.templating.helper" class="Sonata\BlockBundle\Templating\Helper\BlockHelper">
      <tag name="templating.helper" alias="sonata_block"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument>%sonata_block.cache_blocks%</argument>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.block.context_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sonata.block.cache.handler.default" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.loader.chain" class="Sonata\BlockBundle\Block\BlockLoaderChain">
      <argument type="collection">
        <argument type="service" id="sonata.block.loader.service"/>
      </argument>
    </service>
    <service id="sonata.block.loader.service" class="Sonata\BlockBundle\Block\Loader\ServiceLoader">
      <tag name="sonata.block.loader"/>
      <argument type="collection">
        <argument>sonata.admin.block.admin_list</argument>
      </argument>
    </service>
    <service id="sonata.block.twig.global" class="Sonata\BlockBundle\Twig\GlobalVariables">
      <argument type="collection">
        <argument key="block_base">@SonataBlock/Block/block_base.html.twig</argument>
        <argument key="block_container">@SonataBlock/Block/block_container.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.block.cache.handler.default" class="Sonata\BlockBundle\Cache\HttpCacheHandler">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sonata.block.cache.handler.noop" class="Sonata\BlockBundle\Cache\NoopHttpCacheHandler"/>
    <service id="sonata.block.exception.strategy.manager" class="Sonata\BlockBundle\Exception\Strategy\StrategyManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="debug_only">sonata.block.exception.filter.debug_only</argument>
        <argument key="ignore_block_exception">sonata.block.exception.filter.ignore_block_exception</argument>
        <argument key="keep_all">sonata.block.exception.filter.keep_all</argument>
        <argument key="keep_none">sonata.block.exception.filter.keep_none</argument>
      </argument>
      <argument type="collection">
        <argument key="inline">sonata.block.exception.renderer.inline</argument>
        <argument key="inline_debug">sonata.block.exception.renderer.inline_debug</argument>
        <argument key="throw">sonata.block.exception.renderer.throw</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setDefaultFilter">
        <argument>debug_only</argument>
      </call>
      <call method="setDefaultRenderer">
        <argument>throw</argument>
      </call>
    </service>
    <service id="sonata.block.exception.filter.keep_none" class="Sonata\BlockBundle\Exception\Filter\KeepNoneFilter" public="true"/>
    <service id="sonata.block.exception.filter.keep_all" class="Sonata\BlockBundle\Exception\Filter\KeepAllFilter" public="true"/>
    <service id="sonata.block.exception.filter.debug_only" class="Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter" public="true">
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.filter.ignore_block_exception" class="Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter" public="true">
      <argument>Sonata\BlockBundle\Exception\BlockExceptionInterface</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline" class="Sonata\BlockBundle\Exception\Renderer\InlineRenderer" public="true">
      <argument type="service" id="sonata.templating"/>
      <argument>@SonataBlock/Block/block_exception.html.twig</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline_debug" class="Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer" public="true">
      <argument type="service" id="sonata.templating"/>
      <argument>@SonataBlock/Block/block_exception_debug.html.twig</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.renderer.throw" class="Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer" public="true"/>
    <service id="Sonata\BlockBundle\Command\DebugBlocksCommand" class="Sonata\BlockBundle\Command\DebugBlocksCommand">
      <tag name="console.command"/>
    </service>
    <service id="sonata.block.data_collector" class="Sonata\BlockBundle\Profiler\DataCollector\BlockDataCollector" public="false">
      <tag name="data_collector" id="block" template="@SonataBlock/Profiler/block.html.twig"/>
      <argument type="service" id="sonata.block.templating.helper"/>
      <argument type="collection">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.page.block.container</argument>
        <argument>sonata.dashboard.block.container</argument>
        <argument>cmf.block.container</argument>
        <argument>cmf.block.slideshow</argument>
      </argument>
    </service>
    <service id="knp_menu.factory" class="Knp\Menu\MenuFactory" public="true">
      <call method="addExtension">
        <argument type="service" id="knp_menu.factory_extension.routing"/>
        <argument>0</argument>
      </call>
    </service>
    <service id="knp_menu.factory_extension.routing" class="Knp\Menu\Integration\Symfony\RoutingExtension" public="false">
      <tag name="knp_menu.factory_extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="knp_menu.helper" class="Knp\Menu\Twig\Helper" public="false">
      <argument type="service" id="knp_menu.renderer_provider"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="knp_menu.manipulator"/>
      <argument type="service" id="knp_menu.matcher"/>
    </service>
    <service id="knp_menu.matcher" class="Knp\Menu\Matcher\Matcher" public="true">
      <argument type="iterator">
        <argument type="service" id="knp_menu.voter.router"/>
        <argument type="service" id="sonata.admin.menu.matcher.voter.admin"/>
        <argument type="service" id="sonata.admin.menu.matcher.voter.active"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.chain" class="Knp\Menu\Provider\ChainProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="knp_menu.menu_provider.lazy"/>
        <argument type="service" id="knp_menu.menu_provider.builder_alias"/>
        <argument type="service" id="sonata.admin.menu.group_provider"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.lazy" class="Knp\Menu\Provider\LazyProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="collection">
        <argument key="sonata_admin_sidebar" type="service" id="sonata.admin.sidebar_menu"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.builder_alias" class="Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Menu\Renderer\PsrProvider">
      <argument type="service" id="service_locator.hskmc8u"/>
      <argument>twig</argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.voter.router" class="Knp\Menu\Matcher\Voter\RouteVoter">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="knp_menu.manipulator" class="Knp\Menu\Util\MenuManipulator" public="false"/>
    <service id="knp_menu.twig.extension" class="Knp\Menu\Twig\MenuExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="knp_menu.helper"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="service" id="knp_menu.manipulator"/>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>@KnpMenu/menu.html.twig</argument>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.admin.entity_manager" class="Doctrine\ORM\EntityManager" public="false">
      <argument>null</argument>
      <factory service="doctrine" method="getManager"/>
    </service>
    <service id="sonata.admin.manager.orm" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.admin.builder.orm_form" class="Sonata\DoctrineORMAdminBundle\Builder\FormContractor">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.admin.builder.orm_list" class="Sonata\DoctrineORMAdminBundle\Builder\ListBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_list_chain"/>
      <argument type="collection">
        <argument key="array">@SonataAdmin/CRUD/list_array.html.twig</argument>
        <argument key="boolean">@SonataAdmin/CRUD/list_boolean.html.twig</argument>
        <argument key="date">@SonataAdmin/CRUD/list_date.html.twig</argument>
        <argument key="time">@SonataAdmin/CRUD/list_time.html.twig</argument>
        <argument key="datetime">@SonataAdmin/CRUD/list_datetime.html.twig</argument>
        <argument key="text">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="textarea">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="email">@SonataAdmin/CRUD/list_email.html.twig</argument>
        <argument key="trans">@SonataAdmin/CRUD/list_trans.html.twig</argument>
        <argument key="string">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="smallint">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="bigint">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="integer">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="decimal">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="identifier">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="currency">@SonataAdmin/CRUD/list_currency.html.twig</argument>
        <argument key="percent">@SonataAdmin/CRUD/list_percent.html.twig</argument>
        <argument key="choice">@SonataAdmin/CRUD/list_choice.html.twig</argument>
        <argument key="url">@SonataAdmin/CRUD/list_url.html.twig</argument>
        <argument key="html">@SonataAdmin/CRUD/list_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_list" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_list"/>
    </service>
    <service id="sonata.admin.guesser.orm_list_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_list"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_show" class="Sonata\DoctrineORMAdminBundle\Builder\ShowBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_show_chain"/>
      <argument type="collection">
        <argument key="array">@SonataAdmin/CRUD/show_array.html.twig</argument>
        <argument key="boolean">@SonataAdmin/CRUD/show_boolean.html.twig</argument>
        <argument key="date">@SonataAdmin/CRUD/show_date.html.twig</argument>
        <argument key="time">@SonataAdmin/CRUD/show_time.html.twig</argument>
        <argument key="datetime">@SonataAdmin/CRUD/show_datetime.html.twig</argument>
        <argument key="text">@SonataAdmin/CRUD/base_show_field.html.twig</argument>
        <argument key="email">@SonataAdmin/CRUD/show_email.html.twig</argument>
        <argument key="trans">@SonataAdmin/CRUD/show_trans.html.twig</argument>
        <argument key="string">@SonataAdmin/CRUD/base_show_field.html.twig</argument>
        <argument key="smallint">@SonataAdmin/CRUD/base_show_field.html.twig</argument>
        <argument key="bigint">@SonataAdmin/CRUD/base_show_field.html.twig</argument>
        <argument key="integer">@SonataAdmin/CRUD/base_show_field.html.twig</argument>
        <argument key="decimal">@SonataAdmin/CRUD/base_show_field.html.twig</argument>
        <argument key="currency">@SonataAdmin/CRUD/show_currency.html.twig</argument>
        <argument key="percent">@SonataAdmin/CRUD/show_percent.html.twig</argument>
        <argument key="choice">@SonataAdmin/CRUD/show_choice.html.twig</argument>
        <argument key="url">@SonataAdmin/CRUD/show_url.html.twig</argument>
        <argument key="html">@SonataAdmin/CRUD/show_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_show" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_show"/>
    </service>
    <service id="sonata.admin.guesser.orm_show_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_show"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Builder\DatagridBuilder">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.admin.builder.filter.factory"/>
      <argument type="service" id="sonata.admin.guesser.orm_datagrid_chain"/>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Guesser\FilterTypeGuesser">
      <tag name="sonata.admin.guesser.orm_datagrid"/>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_datagrid"/>
      </argument>
    </service>
    <service id="sonata.admin.orm.filter.type.boolean" class="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_boolean"/>
    </service>
    <service id="sonata.admin.orm.filter.type.callback" class="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_callback"/>
    </service>
    <service id="sonata.admin.orm.filter.type.choice" class="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_choice"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model" class="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model_autocomplete" class="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model_autocomplete"/>
    </service>
    <service id="sonata.admin.orm.filter.type.string" class="Sonata\DoctrineORMAdminBundle\Filter\StringFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_string"/>
    </service>
    <service id="sonata.admin.orm.filter.type.number" class="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_number"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date" class="Sonata\DoctrineORMAdminBundle\Filter\DateFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime"/>
    </service>
    <service id="sonata.admin.orm.filter.type.time" class="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_time"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.class" class="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter" shared="false" public="true">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_class"/>
    </service>
    <service id="sonata.admin.manipulator.acl.object.orm" class="Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator"/>
    <service id="sonata.admin.twig.extension" class="Sonata\AdminBundle\Twig\Extension\SonataAdminExtension" public="true">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="service_container"/>
      <call method="setXEditableTypeMapping">
        <argument>%sonata.admin.twig.extension.x_editable_type_mapping%</argument>
      </call>
    </service>
    <service id="sonata.templates.twig.extension" class="Sonata\AdminBundle\Twig\Extension\TemplateRegistryExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.global_template_registry"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.pool" class="Sonata\AdminBundle\Admin\Pool" public="true">
      <argument type="service" id="service_container"/>
      <argument>VisualMasters</argument>
      <argument>bundles/sonataadmin/logo_title.png</argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="lock_protection">false</argument>
        <argument key="enable_jms_di_extra_autoregistration">true</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonatacore/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery-form/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/icheck.min.js</argument>
          <argument>bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js</argument>
          <argument>bundles/sonataadmin/vendor/readmore-js/readmore.min.js</argument>
          <argument>bundles/sonataadmin/vendor/masonry/dist/masonry.pkgd.min.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
          <argument>bundles/sonataadmin/treeview.js</argument>
          <argument>bundles/sonataadmin/sidebar.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css</argument>
          <argument>bundles/sonatacore/vendor/ionicons/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/skins/square/blue.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.css</argument>
          <argument>bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
          <argument>bundles/sonataadmin/css/tree.css</argument>
        </argument>
        <argument key="role_admin">ROLE_SONATA_ADMIN</argument>
        <argument key="role_super_admin">ROLE_SUPER_ADMIN</argument>
        <argument key="search">true</argument>
      </argument>
      <argument type="service" id="property_accessor"/>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.admin.global_template_registry"/>
      </call>
      <call method="setAdminServiceIds">
        <argument type="collection">
          <argument>sonata.media.admin.media</argument>
          <argument>sonata.media.admin.gallery</argument>
          <argument>sonata.media.admin.gallery_has_media</argument>
          <argument>sonata.user.admin.user</argument>
          <argument>sonata.user.admin.group</argument>
          <argument>sonata.admin.gallery_page</argument>
          <argument>sonata.admin.slide</argument>
          <argument>sonata.admin.orders</argument>
          <argument>sonata.admin.order_items</argument>
          <argument>sonata.admin.video</argument>
        </argument>
      </call>
      <call method="setAdminGroups">
        <argument type="collection">
          <argument key="Galleries" type="collection">
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.admin.gallery_page</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
                <argument key="roles" type="collection"/>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.admin.slide</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
                <argument key="roles" type="collection"/>
              </argument>
            </argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
            <argument key="label">Galleries</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
          </argument>
          <argument key="Videos" type="collection">
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.admin.video</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
                <argument key="roles" type="collection"/>
              </argument>
            </argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
            <argument key="label">Videos</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
          </argument>
          <argument key="Orders" type="collection">
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.admin.orders</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
                <argument key="roles" type="collection"/>
              </argument>
            </argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
            <argument key="label">Orders</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
          </argument>
        </argument>
      </call>
      <call method="setAdminClasses">
        <argument type="collection">
          <argument key="Application\Sonata\MediaBundle\Entity\Media" type="collection">
            <argument>sonata.media.admin.media</argument>
          </argument>
          <argument key="Application\Sonata\MediaBundle\Entity\Gallery" type="collection">
            <argument>sonata.media.admin.gallery</argument>
          </argument>
          <argument key="Application\Sonata\MediaBundle\Entity\GalleryHasMedia" type="collection">
            <argument>sonata.media.admin.gallery_has_media</argument>
          </argument>
          <argument key="Sonata\UserBundle\Entity\BaseUser" type="collection">
            <argument>sonata.user.admin.user</argument>
          </argument>
          <argument key="Sonata\UserBundle\Entity\BaseGroup" type="collection">
            <argument>sonata.user.admin.group</argument>
          </argument>
          <argument key="GalleryBundle\Entity\GalleryPage" type="collection">
            <argument>sonata.admin.gallery_page</argument>
          </argument>
          <argument key="GalleryBundle\Entity\Slide" type="collection">
            <argument>sonata.admin.slide</argument>
          </argument>
          <argument key="LandingBundle\Entity\Order" type="collection">
            <argument>sonata.admin.orders</argument>
          </argument>
          <argument key="LandingBundle\Entity\OrderItem" type="collection">
            <argument>sonata.admin.order_items</argument>
          </argument>
          <argument key="SiteBundle\Entity\Video" type="collection">
            <argument>sonata.admin.video</argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.route_loader" class="Sonata\AdminBundle\Route\AdminPoolLoader" public="true">
      <tag name="routing.loader"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument>sonata.media.admin.media</argument>
        <argument>sonata.media.admin.gallery</argument>
        <argument>sonata.media.admin.gallery_has_media</argument>
        <argument>sonata.user.admin.user</argument>
        <argument>sonata.user.admin.group</argument>
        <argument>sonata.admin.gallery_page</argument>
        <argument>sonata.admin.slide</argument>
        <argument>sonata.admin.orders</argument>
        <argument>sonata.admin.order_items</argument>
        <argument>sonata.admin.video</argument>
      </argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.helper" class="Sonata\AdminBundle\Admin\AdminHelper" public="true">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.builder.filter.factory" class="Sonata\AdminBundle\Filter\FilterFactory" public="true">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="doctrine_orm_boolean">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter">sonata.admin.orm.filter.type.callback</argument>
        <argument key="doctrine_orm_callback">sonata.admin.orm.filter.type.callback</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter">sonata.admin.orm.filter.type.choice</argument>
        <argument key="doctrine_orm_choice">sonata.admin.orm.filter.type.choice</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter">sonata.admin.orm.filter.type.model</argument>
        <argument key="doctrine_orm_model">sonata.admin.orm.filter.type.model</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter">sonata.admin.orm.filter.type.model_autocomplete</argument>
        <argument key="doctrine_orm_model_autocomplete">sonata.admin.orm.filter.type.model_autocomplete</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\StringFilter">sonata.admin.orm.filter.type.string</argument>
        <argument key="doctrine_orm_string">sonata.admin.orm.filter.type.string</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter">sonata.admin.orm.filter.type.number</argument>
        <argument key="doctrine_orm_number">sonata.admin.orm.filter.type.number</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateFilter">sonata.admin.orm.filter.type.date</argument>
        <argument key="doctrine_orm_date">sonata.admin.orm.filter.type.date</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="doctrine_orm_date_range">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="doctrine_orm_datetime">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter">sonata.admin.orm.filter.type.time</argument>
        <argument key="doctrine_orm_time">sonata.admin.orm.filter.type.time</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="doctrine_orm_datetime_range">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter">sonata.admin.orm.filter.type.class</argument>
        <argument key="doctrine_orm_class">sonata.admin.orm.filter.type.class</argument>
      </argument>
    </service>
    <service id="sonata.admin.breadcrumbs_builder" class="Sonata\AdminBundle\Admin\BreadcrumbsBuilder" public="true">
      <argument>%sonata.admin.configuration.breadcrumbs%</argument>
    </service>
    <service id="sonata.admin.label.strategy.bc" class="Sonata\AdminBundle\Translator\BCLabelTranslatorStrategy" public="true"/>
    <service id="sonata.admin.label.strategy.native" class="Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy" public="true"/>
    <service id="sonata.admin.label.strategy.noop" class="Sonata\AdminBundle\Translator\NoopLabelTranslatorStrategy" public="true"/>
    <service id="sonata.admin.label.strategy.underscore" class="Sonata\AdminBundle\Translator\UnderscoreLabelTranslatorStrategy" public="true"/>
    <service id="sonata.admin.label.strategy.form_component" class="Sonata\AdminBundle\Translator\FormLabelTranslatorStrategy" public="true"/>
    <service id="sonata.admin.controller.admin" class="Sonata\AdminBundle\Controller\HelperController" public="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.helper"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="sonata.admin.audit.manager" class="Sonata\AdminBundle\Model\AuditManager" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.exporter" class="Sonata\AdminBundle\Export\Exporter" public="true">
      <deprecated>The service "%service_id%" is deprecated in favor of the "sonata.exporter.exporter" service since version 3.14 and will be removed in 4.0.</deprecated>
    </service>
    <service id="sonata.admin.search.handler" class="Sonata\AdminBundle\Search\SearchHandler" public="true">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.event.extension" class="Sonata\AdminBundle\Event\AdminEventExtension" public="true">
      <tag name="sonata.admin.extension" global="1"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.twig.global" class="Sonata\AdminBundle\Twig\GlobalVariables" public="true">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.filter_persister.session" class="Sonata\AdminBundle\Filter\Persister\SessionFilterPersister">
      <argument type="service" id="session"/>
    </service>
    <service id="sonata.admin.global_template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry" public="true">
      <argument>%sonata.admin.configuration.templates%</argument>
    </service>
    <service id="sonata.admin.form.type.admin" class="Sonata\AdminBundle\Form\Type\AdminType" public="true">
      <tag name="form.type" alias="sonata_type_admin"/>
    </service>
    <service id="sonata.admin.form.type.model_choice" class="Sonata\AdminBundle\Form\Type\ModelType" public="true">
      <tag name="form.type" alias="sonata_type_model"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sonata.admin.form.type.model_list" class="Sonata\AdminBundle\Form\Type\ModelListType" public="true">
      <tag name="form.type" alias="sonata_type_model_list"/>
    </service>
    <service id="sonata.admin.form.type.model_reference" class="Sonata\AdminBundle\Form\Type\ModelReferenceType" public="true">
      <tag name="form.type" alias="sonata_type_model_reference"/>
    </service>
    <service id="sonata.admin.form.type.model_hidden" class="Sonata\AdminBundle\Form\Type\ModelHiddenType" public="true">
      <tag name="form.type" alias="sonata_type_model_hidden"/>
    </service>
    <service id="sonata.admin.form.type.model_autocomplete" class="Sonata\AdminBundle\Form\Type\ModelAutocompleteType" public="true">
      <tag name="form.type" alias="sonata_type_model_autocomplete"/>
    </service>
    <service id="sonata.admin.form.type.collection" class="Sonata\AdminBundle\Form\Type\CollectionType" public="true">
      <tag name="form.type" alias="sonata_type_native_collection"/>
    </service>
    <service id="sonata.admin.doctrine_orm.form.type.choice_field_mask" class="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType" public="true">
      <tag name="form.type" alias="sonata_type_choice_field_mask"/>
    </service>
    <service id="sonata.admin.form.extension.field" class="Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension" public="true">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="email"></argument>
        <argument key="textarea"></argument>
        <argument key="text"></argument>
        <argument key="choice"></argument>
        <argument key="integer"></argument>
        <argument key="datetime">sonata-medium-date</argument>
        <argument key="date">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateTimeType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\EmailType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\IntegerType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextareaType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextType"></argument>
      </argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="lock_protection">false</argument>
        <argument key="enable_jms_di_extra_autoregistration">true</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonatacore/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery-form/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/icheck.min.js</argument>
          <argument>bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js</argument>
          <argument>bundles/sonataadmin/vendor/readmore-js/readmore.min.js</argument>
          <argument>bundles/sonataadmin/vendor/masonry/dist/masonry.pkgd.min.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
          <argument>bundles/sonataadmin/treeview.js</argument>
          <argument>bundles/sonataadmin/sidebar.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css</argument>
          <argument>bundles/sonatacore/vendor/ionicons/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/skins/square/blue.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.css</argument>
          <argument>bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
          <argument>bundles/sonataadmin/css/tree.css</argument>
        </argument>
        <argument key="role_admin">ROLE_SONATA_ADMIN</argument>
        <argument key="role_super_admin">ROLE_SUPER_ADMIN</argument>
        <argument key="search">true</argument>
      </argument>
    </service>
    <service id="sonata.admin.form.extension.field.mopa" class="Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension" public="true">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="sonata.admin.form.extension.choice" class="Sonata\AdminBundle\Form\Extension\ChoiceTypeExtension" public="true">
      <tag name="form.type_extension" alias="choice" extended_type="Symfony\Component\Form\Extension\Core\Type\ChoiceType" extended-type="Symfony\Component\Form\Extension\Core\Type\ChoiceType"/>
    </service>
    <service id="sonata.admin.form.filter.type.number" class="Sonata\AdminBundle\Form\Type\Filter\NumberType" public="true">
      <tag name="form.type" alias="sonata_type_filter_number"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.choice" class="Sonata\AdminBundle\Form\Type\Filter\ChoiceType" public="true">
      <tag name="form.type" alias="sonata_type_filter_choice"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.default" class="Sonata\AdminBundle\Form\Type\Filter\DefaultType" public="true">
      <tag name="form.type" alias="sonata_type_filter_default"/>
    </service>
    <service id="sonata.admin.form.filter.type.date" class="Sonata\AdminBundle\Form\Type\Filter\DateType" public="true">
      <tag name="form.type" alias="sonata_type_filter_date"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.daterange" class="Sonata\AdminBundle\Form\Type\Filter\DateRangeType" public="true">
      <tag name="form.type" alias="sonata_type_filter_date_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeType" public="true">
      <tag name="form.type" alias="sonata_type_filter_datetime"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime_range" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType" public="true">
      <tag name="form.type" alias="sonata_type_filter_datetime_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator" public="true">
      <tag name="validator.constraint_validator" alias="sonata.admin.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.admin.route.path_info" class="Sonata\AdminBundle\Route\PathInfoBuilder" public="true">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.query_string" class="Sonata\AdminBundle\Route\QueryStringBuilder" public="true">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.default_generator" class="Sonata\AdminBundle\Route\DefaultRouteGenerator" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service" id="sonata.admin.route.cache"/>
    </service>
    <service id="sonata.admin.route.cache" class="Sonata\AdminBundle\Route\RoutesCache" public="true">
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/sonata/admin</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.route.cache_warmup" class="Sonata\AdminBundle\Route\RoutesCacheWarmUp" public="true">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="sonata.admin.route.cache"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.admin_list" class="Sonata\AdminBundle\Block\AdminListBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.admin_list</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.global_template_registry"/>
    </service>
    <service id="sonata.admin.block.search_result" class="Sonata\AdminBundle\Block\AdminSearchBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.search_result</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.search.handler"/>
    </service>
    <service id="sonata.admin.block.stats" class="Sonata\AdminBundle\Block\AdminStatsBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.stats</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.menu_builder" class="Sonata\AdminBundle\Menu\MenuBuilder" public="true">
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.sidebar_menu" class="Knp\Menu\MenuItem" public="true">
      <tag name="knp_menu.menu" alias="sonata_admin_sidebar"/>
      <factory service="sonata.admin.menu_builder" method="createSidebarMenu"/>
    </service>
    <service id="sonata.admin.menu.group_provider" class="Sonata\AdminBundle\Menu\Provider\GroupMenuProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.admin" class="Sonata\AdminBundle\Menu\Matcher\Voter\AdminVoter" public="true">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.children" class="Sonata\AdminBundle\Menu\Matcher\Voter\ChildrenVoter" public="true">
      <argument type="service" id="knp_menu.matcher"/>
      <deprecated>The "%service_id%" service is deprecated since 3.28 and will be removed in 4.0.</deprecated>
    </service>
    <service id="sonata.admin.menu.matcher.voter.active" class="Sonata\AdminBundle\Menu\Matcher\Voter\ActiveVoter" public="true">
      <tag name="knp_menu.voter"/>
    </service>
    <service id="Sonata\AdminBundle\Command\CreateClassCacheCommand" class="Sonata\AdminBundle\Command\CreateClassCacheCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\ExplainAdminCommand" class="Sonata\AdminBundle\Command\ExplainAdminCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\GenerateAdminCommand" class="Sonata\AdminBundle\Command\GenerateAdminCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\GenerateObjectAclCommand" class="Sonata\AdminBundle\Command\GenerateObjectAclCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\ListAdminCommand" class="Sonata\AdminBundle\Command\ListAdminCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\SetupAclCommand" class="Sonata\AdminBundle\Command\SetupAclCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="sonata.admin.security.handler.noop" class="Sonata\AdminBundle\Security\Handler\NoopSecurityHandler" public="false"/>
    <service id="sonata.admin.security.handler.role" class="Sonata\AdminBundle\Security\Handler\RoleSecurityHandler" public="false">
      <argument type="service" id="security.authorization_checker"/>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
    </service>
    <service id="sonata.admin.security.handler.acl" class="Sonata\AdminBundle\Security\Handler\AclSecurityHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.acl.dbal.provider" on-invalid="null"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
      <call method="setAdminPermissions">
        <argument>%sonata.admin.configuration.security.admin_permissions%</argument>
      </call>
      <call method="setObjectPermissions">
        <argument>%sonata.admin.configuration.security.object_permissions%</argument>
      </call>
    </service>
    <service id="sonata.admin.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminAclManipulator" public="true">
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.object.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminObjectAclManipulator" public="true">
      <argument type="service" id="form.factory"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.media.pool" class="Sonata\MediaBundle\Provider\Pool" public="true">
      <argument>default</argument>
      <call method="addContext">
        <argument>default</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="default_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="default_big" type="collection">
            <argument key="width">500</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addDownloadStrategy">
        <argument>sonata.media.security.superadmin_strategy</argument>
        <argument type="service" id="sonata.media.security.superadmin_strategy"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.image</argument>
        <argument type="service" id="sonata.media.provider.image"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.file</argument>
        <argument type="service" id="sonata.media.provider.file"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.youtube</argument>
        <argument type="service" id="sonata.media.provider.youtube"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.dailymotion</argument>
        <argument type="service" id="sonata.media.provider.dailymotion"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.vimeo</argument>
        <argument type="service" id="sonata.media.provider.vimeo"/>
      </call>
    </service>
    <service id="sonata.media.thumbnail.format" class="Sonata\MediaBundle\Thumbnail\FormatThumbnail">
      <argument>jpg</argument>
    </service>
    <service id="sonata.media.provider.image" class="Sonata\MediaBundle\Provider\ImageProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.image</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="collection">
        <argument>jpg</argument>
        <argument>png</argument>
        <argument>jpeg</argument>
      </argument>
      <argument type="collection">
        <argument>image/pjpeg</argument>
        <argument>image/jpeg</argument>
        <argument>image/png</argument>
        <argument>image/x-png</argument>
      </argument>
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">@SonataMedia/Provider/thumbnail.html.twig</argument>
          <argument key="helper_view">@SonataMedia/Provider/view_image.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.file" class="Sonata\MediaBundle\Provider\FileProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.file</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="collection">
        <argument>pdf</argument>
        <argument>txt</argument>
        <argument>rtf</argument>
        <argument>doc</argument>
        <argument>docx</argument>
        <argument>xls</argument>
        <argument>xlsx</argument>
        <argument>ppt</argument>
        <argument>pptx</argument>
        <argument>odt</argument>
        <argument>odg</argument>
        <argument>odp</argument>
        <argument>ods</argument>
        <argument>odc</argument>
        <argument>odf</argument>
        <argument>odb</argument>
        <argument>csv</argument>
        <argument>xml</argument>
      </argument>
      <argument type="collection">
        <argument>application/pdf</argument>
        <argument>application/x-pdf</argument>
        <argument>application/rtf</argument>
        <argument>text/html</argument>
        <argument>text/rtf</argument>
        <argument>text/plain</argument>
        <argument>application/excel</argument>
        <argument>application/msword</argument>
        <argument>application/vnd.ms-excel</argument>
        <argument>application/vnd.ms-powerpoint</argument>
        <argument>application/vnd.ms-powerpoint</argument>
        <argument>application/vnd.oasis.opendocument.text</argument>
        <argument>application/vnd.oasis.opendocument.graphics</argument>
        <argument>application/vnd.oasis.opendocument.presentation</argument>
        <argument>application/vnd.oasis.opendocument.spreadsheet</argument>
        <argument>application/vnd.oasis.opendocument.chart</argument>
        <argument>application/vnd.oasis.opendocument.formula</argument>
        <argument>application/vnd.oasis.opendocument.database</argument>
        <argument>application/vnd.oasis.opendocument.image</argument>
        <argument>text/comma-separated-values</argument>
        <argument>text/xml</argument>
        <argument>application/xml</argument>
        <argument>application/zip</argument>
      </argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">@SonataMedia/Provider/thumbnail.html.twig</argument>
          <argument key="helper_view">@SonataMedia/Provider/view_file.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.youtube" class="Sonata\MediaBundle\Provider\YouTubeProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.youtube</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <argument>false</argument>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">@SonataMedia/Provider/thumbnail.html.twig</argument>
          <argument key="helper_view">@SonataMedia/Provider/view_youtube.html.twig</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.dailymotion" class="Sonata\MediaBundle\Provider\DailyMotionProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.dailymotion</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">@SonataMedia/Provider/thumbnail.html.twig</argument>
          <argument key="helper_view">@SonataMedia/Provider/view_dailymotion.html.twig</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.vimeo" class="Sonata\MediaBundle\Provider\VimeoProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.vimeo</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">@SonataMedia/Provider/thumbnail.html.twig</argument>
          <argument key="helper_view">@SonataMedia/Provider/view_vimeo.html.twig</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.buzz.connector.file_get_contents" class="Buzz\Client\FileGetContents">
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setProxy">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.media.buzz.connector.curl" class="Buzz\Client\Curl">
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setProxy">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.media.buzz.browser" class="Buzz\Browser">
      <argument type="service" id="sonata.media.buzz.connector.curl"/>
    </service>
    <service id="sonata.media.cdn.server" class="Sonata\MediaBundle\CDN\Server">
      <argument>/uploads/media</argument>
    </service>
    <service id="sonata.media.twig.extension" class="Sonata\MediaBundle\Twig\Extension\MediaExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.twig.global" class="Sonata\MediaBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.security.public_strategy" class="Sonata\MediaBundle\Security\PublicDownloadStrategy">
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.media.security.forbidden_strategy" class="Sonata\MediaBundle\Security\ForbiddenDownloadStrategy">
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.media.security.superadmin_strategy" class="Sonata\MediaBundle\Security\RolesDownloadStrategy">
      <argument type="service" id="translator.data_collector"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.manager"/>
          <argument type="service" id="debug.security.access.decision_manager"/>
          <argument>false</argument>
        </service>
      </argument>
      <argument type="collection">
        <argument>ROLE_ADMIN</argument>
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
    </service>
    <service id="sonata.media.security.session_strategy" class="Sonata\MediaBundle\Security\SessionDownloadStrategy">
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="session"/>
      <argument>1</argument>
    </service>
    <service id="sonata.media.security.connected_strategy" class="Sonata\MediaBundle\Security\RolesDownloadStrategy">
      <argument type="service" id="translator.data_collector"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.manager"/>
          <argument type="service" id="debug.security.access.decision_manager"/>
          <argument>false</argument>
        </service>
      </argument>
      <argument type="collection">
        <argument>IS_AUTHENTICATED_FULLY</argument>
        <argument>IS_AUTHENTICATED_REMEMBERED</argument>
      </argument>
    </service>
    <service id="sonata.media.form.type.media" class="Sonata\MediaBundle\Form\Type\MediaType">
      <tag name="form.type" alias="sonata_media_type"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="sonata.media.adapter.filesystem.local" class="Sonata\MediaBundle\Filesystem\Local">
      <argument>/Users/drolya/Public/visualmasters/app/../web/uploads/media</argument>
      <argument>false</argument>
    </service>
    <service id="sonata.media.adapter.service.s3" class="Aws\S3\S3Client">
      <argument type="collection"/>
      <factory class="Aws\S3\S3Client" method="factory"/>
    </service>
    <service id="sonata.media.filesystem.local" class="Gaufrette\Filesystem">
      <argument type="service" id="sonata.media.adapter.filesystem.local"/>
    </service>
    <service id="sonata.media.metadata.proxy" class="Sonata\MediaBundle\Metadata\ProxyMetadataBuilder">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.metadata.amazon" class="Sonata\MediaBundle\Metadata\AmazonMetadataBuilder"/>
    <service id="sonata.media.metadata.noop" class="Sonata\MediaBundle\Metadata\NoopMetadataBuilder"/>
    <service id="sonata.media.validator.format" class="Sonata\MediaBundle\Validator\FormatValidator">
      <tag name="validator.constraint_validator" alias="sonata.media.validator.format"/>
      <argument type="service" id="sonata.media.pool"/>
    </service>
    <service id="sonata.media.serializer.handler.media" class="Sonata\MediaBundle\Serializer\MediaSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.serializer.handler.gallery" class="Sonata\MediaBundle\Serializer\GallerySerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
    </service>
    <service id="Sonata\MediaBundle\Command\AddMassMediaCommand" class="Sonata\MediaBundle\Command\AddMassMediaCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\AddMediaCommand" class="Sonata\MediaBundle\Command\AddMediaCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\CleanMediaCommand" class="Sonata\MediaBundle\Command\CleanMediaCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\FixMediaContextCommand" class="Sonata\MediaBundle\Command\FixMediaContextCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\MigrateToJsonTypeCommand" class="Sonata\MediaBundle\Command\MigrateToJsonTypeCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\RefreshMetadataCommand" class="Sonata\MediaBundle\Command\RefreshMetadataCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\RemoveThumbsCommand" class="Sonata\MediaBundle\Command\RemoveThumbsCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\SyncThumbsCommand" class="Sonata\MediaBundle\Command\SyncThumbsCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\UpdateCdnStatusCommand" class="Sonata\MediaBundle\Command\UpdateCdnStatusCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="sonata.media.block.media" class="Sonata\MediaBundle\Block\MediaBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.media</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.block.feature_media" class="Sonata\MediaBundle\Block\FeatureMediaBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.feature_media</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.block.gallery" class="Sonata\MediaBundle\Block\GalleryBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.gallery</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
    </service>
    <service id="sonata.media.block.gallery_list" class="Sonata\MediaBundle\Block\GalleryListBlockService" public="true">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.gallery_list</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
      <argument type="service" id="sonata.media.pool"/>
    </service>
    <service id="sonata.media.manager.media" class="Sonata\MediaBundle\Entity\MediaManager" public="true">
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.manager.gallery" class="Sonata\MediaBundle\Entity\GalleryManager">
      <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.generator.default" class="Sonata\MediaBundle\Generator\DefaultGenerator"/>
    <service id="sonata.media.doctrine.event_subscriber" class="Sonata\MediaBundle\Listener\ORM\MediaEventSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.admin.media" class="Sonata\MediaBundle\Admin\ORM\MediaAdmin" shared="false" public="true">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.media.admin.groupname%" label_catalogue="%sonata.media.admin.media.translation_domain%" label="media" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.media.admin.groupicon%"/>
      <argument>sonata.media.admin.media</argument>
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
      <argument>SonataMediaBundle:MediaAdmin</argument>
      <argument type="service" id="sonata.media.pool"/>
      <argument>null</argument>
      <call method="setModelManager">
        <argument type="service" id="sonata.media.admin.media.manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>media</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.media.admin.media.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.media.admin.media.manager" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.admin.gallery" class="Sonata\MediaBundle\Admin\GalleryAdmin" shared="false" public="true">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.media.admin.groupname%" label="gallery" label_catalogue="%sonata.media.admin.gallery.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.media.admin.groupicon%"/>
      <argument>sonata.media.admin.gallery</argument>
      <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
      <argument>SonataMediaBundle:GalleryAdmin</argument>
      <argument type="service" id="sonata.media.pool"/>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>gallery</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.media.admin.gallery.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.media.admin.gallery_has_media" class="Sonata\MediaBundle\Admin\GalleryHasMediaAdmin" shared="false" public="true">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard="" group="%sonata.media.admin.groupname%" label_catalogue="%sonata.media.admin.gallery_has_media.translation_domain%" label="gallery_has_media" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.media.admin.groupicon%"/>
      <argument>sonata.media.admin.gallery_has_media</argument>
      <argument>Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>gallery_has_media</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.media.admin.gallery_has_media.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.media.adapter.image.gd" class="Imagine\Gd\Imagine"/>
    <service id="sonata.media.adapter.image.imagick" class="Imagine\Imagick\Imagine"/>
    <service id="sonata.media.adapter.image.gmagick" class="Imagine\Gmagick\Imagine"/>
    <service id="sonata.media.resizer.simple" class="Sonata\MediaBundle\Resizer\SimpleResizer">
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument>inset</argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
    </service>
    <service id="sonata.media.resizer.square" class="Sonata\MediaBundle\Resizer\SquareResizer">
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument>inset</argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
    </service>
    <service id="Sonata\EasyExtendsBundle\Command\DumpMappingCommand" class="Sonata\EasyExtendsBundle\Command\DumpMappingCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\EasyExtendsBundle\Command\GenerateCommand" class="Sonata\EasyExtendsBundle\Command\GenerateCommand" public="true">
      <tag name="console.command"/>
    </service>
    <service id="sonata.easy_extends.generator.bundle" class="Sonata\EasyExtendsBundle\Generator\BundleGenerator" public="true"/>
    <service id="sonata.easy_extends.generator.orm" class="Sonata\EasyExtendsBundle\Generator\OrmGenerator" public="true"/>
    <service id="sonata.easy_extends.generator.odm" class="Sonata\EasyExtendsBundle\Generator\OdmGenerator" public="true"/>
    <service id="sonata.easy_extends.generator.phpcr" class="Sonata\EasyExtendsBundle\Generator\PHPCRGenerator" public="true"/>
    <service id="sonata.easy_extends.generator.serializer" class="Sonata\EasyExtendsBundle\Generator\SerializerGenerator" public="true"/>
    <service id="sonata.easy_extends.doctrine.mapper" class="Sonata\EasyExtendsBundle\Mapper\DoctrineORMMapper">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection"/>
      <call method="addAssociation">
        <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">galleryHasMedias</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">media</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">gallery</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Gallery</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">galleryHasMedias</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">gallery_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">media</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Media</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">galleryHasMedias</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">media_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">galleryHasMedias</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">gallery</argument>
            <argument key="orphanRemoval">true</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Sonata\UserBundle\Entity\BaseUser</argument>
        <argument>mapManyToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">groups</argument>
            <argument key="targetEntity">Sonata\UserBundle\Entity\BaseGroup</argument>
            <argument key="cascade" type="collection"/>
            <argument key="joinTable" type="collection">
              <argument key="name">fos_user_user_group</argument>
              <argument key="joinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">user_id</argument>
                  <argument key="referencedColumnName">id</argument>
                  <argument key="onDelete">CASCADE</argument>
                </argument>
              </argument>
              <argument key="inverseJoinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">group_id</argument>
                  <argument key="referencedColumnName">id</argument>
                  <argument key="onDelete">CASCADE</argument>
                </argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.event_dispatcher" class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
      <argument type="service" id="service_locator.orfjtul"/>
      <call method="setListeners">
        <argument type="collection">
          <argument key="serializer.pre_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerializeTypedProxy</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
          </argument>
          <argument key="serializer.post_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber" public="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber" public="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id="service_locator.hyech7z"/>
      <argument type="collection">
        <argument key="1" type="collection">
          <argument key="sonata_media_media_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_gallery_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToyml</argument>
            </argument>
          </argument>
        </argument>
        <argument key="2" type="collection">
          <argument key="sonata_media_media_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_gallery_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromyml</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromyml</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromyml</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sP</argument>
      <argument>UTC</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.php_collection_handler" class="JMS\Serializer\Handler\PhpCollectionHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.form_error_handler" class="JMS\Serializer\Handler\FormErrorHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.metadata.file_locator" class="Metadata\Driver\FileLocator" public="false">
      <argument type="collection">
        <argument key="Sonata\BlockBundle">/Users/drolya/Public/visualmasters/vendor/sonata-project/block-bundle/src/Resources/config/serializer</argument>
        <argument key="Sonata\MediaBundle">/Users/drolya/Public/visualmasters/vendor/sonata-project/media-bundle/src/Resources/config/serializer</argument>
        <argument key="Application\Sonata\MediaBundle">/Users/drolya/Public/visualmasters/src/Application/Sonata/MediaBundle/Resources/config/serializer</argument>
        <argument key="Sonata\UserBundle">/Users/drolya/Public/visualmasters/vendor/sonata-project/user-bundle/src/Resources/config/serializer</argument>
      </argument>
    </service>
    <service id="jms_serializer.metadata.yaml_driver" class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="jms_serializer.metadata.xml_driver" class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="jms_serializer.metadata.php_driver" class="JMS\Serializer\Metadata\Driver\PhpDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="jms_serializer.metadata.annotation_driver" class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="jms_serializer.metadata.chain_driver" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="jms_serializer.metadata.yaml_driver"/>
        <argument type="service" id="jms_serializer.metadata.xml_driver"/>
        <argument type="service" id="jms_serializer.metadata.php_driver"/>
        <argument type="service" id="jms_serializer.metadata.annotation_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.metadata.doctrine_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.metadata.doctrine_phpcr_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine_phpcr"/>
    </service>
    <service id="jms_serializer.metadata.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver" public="false">
      <argument type="service" id="service_container"/>
      <argument>jms_serializer.metadata_driver</argument>
    </service>
    <service id="jms_serializer.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/jms_serializer</argument>
    </service>
    <service id="jms_serializer.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="jms_serializer.metadata.lazy_loading_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="jms_serializer.version_exclusion_strategy" class="JMS\Serializer\Exclusion\VersionExclusionStrategy" public="false" abstract="true"/>
    <service id="jms_serializer.camel_case_naming_strategy" class="JMS\Serializer\Naming\IdenticalPropertyNamingStrategy" public="false">
      <argument>_</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.identical_property_naming_strategy" class="JMS\Serializer\Naming\IdenticalPropertyNamingStrategy" public="false"/>
    <service id="jms_serializer.serialized_name_annotation_strategy" class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
      <argument type="service" id="jms_serializer.camel_case_naming_strategy"/>
    </service>
    <service id="jms_serializer.cache_naming_strategy" class="JMS\Serializer\Naming\CacheNamingStrategy" public="false">
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
    </service>
    <service id="jms_serializer.doctrine_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="string">null</argument>
    </service>
    <service id="jms_serializer.doctrine_phpcr_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine_phpcr"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.serializer" class="JMS\Serializer\Serializer" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service">
        <service class="PhpCollection\Map">
          <argument type="collection">
            <argument key="json" type="service" id="jms_serializer.json_serialization_visitor"/>
            <argument key="xml" type="service" id="jms_serializer.xml_serialization_visitor"/>
            <argument key="yml" type="service" id="jms_serializer.yaml_serialization_visitor"/>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="PhpCollection\Map">
          <argument type="collection">
            <argument key="json" type="service" id="jms_serializer.json_deserialization_visitor"/>
            <argument key="xml" type="service" id="jms_serializer.xml_deserialization_visitor"/>
          </argument>
        </service>
      </argument>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <call method="setSerializationContextFactory">
        <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      </call>
      <call method="setDeserializationContextFactory">
        <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
      </call>
    </service>
    <service id="jms_serializer.expression_evaluator" class="JMS\Serializer\Expression\ExpressionEvaluator">
      <argument type="service" id="jms_serializer.expression_language"/>
      <argument type="collection">
        <argument key="container" type="service" id="service_container"/>
      </argument>
    </service>
    <service id="jms_serializer.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false">
      <call method="registerProvider">
        <argument type="service" id="jms_serializer.expression_language.function_provider"/>
      </call>
    </service>
    <service id="jms_serializer.expression_language.function_provider" class="JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider" public="false"/>
    <service id="jms_serializer.twig_extension.serializer" class="JMS\Serializer\Twig\SerializerRuntimeExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="jms_serializer.twig_extension.serializer_runtime_helper" class="JMS\Serializer\Twig\SerializerRuntimeHelper" public="true">
      <tag name="twig.runtime"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.accessor_strategy.default" class="JMS\Serializer\Accessor\DefaultAccessorStrategy" public="false"/>
    <service id="jms_serializer.accessor_strategy.expression" class="JMS\Serializer\Accessor\ExpressionAccessorStrategy" public="false">
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\JsonSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy.expression"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\JsonDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\XmlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy.expression"/>
      <call method="setFormatOutput">
        <argument>true</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\XmlDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <call method="setDoctypeWhitelist">
        <argument type="collection"/>
      </call>
    </service>
    <service id="jms_serializer.yaml_serialization_visitor" class="JMS\Serializer\YamlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="yml"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy.expression"/>
    </service>
    <service id="jms_serializer.configured_serialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="jms_serializer.configured_deserialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="fos_user.user_manager.default" class="FOS\UserBundle\Doctrine\UserManager" public="false">
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
      <argument type="service" id="fos_user.object_manager"/>
      <argument>SiteBundle\Entity\User</argument>
    </service>
    <service id="fos_user.object_manager" class="Doctrine\Common\Persistence\ObjectManager" public="false">
      <argument>null</argument>
      <factory service="doctrine" method="getManager"/>
    </service>
    <service id="fos_user.user_listener" class="FOS\UserBundle\Doctrine\UserListener" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
    </service>
    <service id="fos_user.validator.initializer" class="FOS\UserBundle\Validator\Initializer" public="false">
      <tag name="validator.initializer"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
    </service>
    <service id="fos_user.security.interactive_login_listener" class="FOS\UserBundle\EventListener\LastLoginListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
    </service>
    <service id="fos_user.security.login_manager" class="FOS\UserBundle\Security\LoginManager">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="fos_user.user_provider.username" class="FOS\UserBundle\Security\UserProvider" public="false">
      <argument type="service" id="sonata.user.orm.user_manager"/>
    </service>
    <service id="fos_user.user_provider.username_email" class="FOS\UserBundle\Security\EmailUserProvider" public="false">
      <argument type="service" id="sonata.user.orm.user_manager"/>
    </service>
    <service id="fos_user.security.controller" class="FOS\UserBundle\Controller\SecurityController" public="true">
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_user.util.canonicalizer.default" class="FOS\UserBundle\Util\Canonicalizer" public="false"/>
    <service id="fos_user.util.user_manipulator" class="FOS\UserBundle\Util\UserManipulator">
      <argument type="service" id="sonata.user.orm.user_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fos_user.util.token_generator.default" class="FOS\UserBundle\Util\TokenGenerator" public="false"/>
    <service id="fos_user.util.password_updater" class="FOS\UserBundle\Util\PasswordUpdater" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="fos_user.util.canonical_fields_updater" class="FOS\UserBundle\Util\CanonicalFieldsUpdater" public="false">
      <argument type="service" id="fos_user.util.canonicalizer.default"/>
      <argument type="service" id="fos_user.util.canonicalizer.default"/>
    </service>
    <service id="fos_user.mailer.default" class="FOS\UserBundle\Mailer\Mailer" public="false">
      <tag name="fos_user.requires_swift"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="collection">
        <argument key="confirmation.template">@FOSUser/Registration/email.txt.twig</argument>
        <argument key="resetting.template">@FOSUser/Resetting/email.txt.twig</argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation">%fos_user.registration.confirmation.from_email%</argument>
          <argument key="resetting">%fos_user.resetting.email.from_email%</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.mailer.twig_swift" class="FOS\UserBundle\Mailer\TwigSwiftMailer" public="false">
      <tag name="fos_user.requires_swift"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="template" type="collection">
          <argument key="confirmation">@FOSUser/Registration/email.txt.twig</argument>
          <argument key="resetting">@FOSUser/Resetting/email.txt.twig</argument>
        </argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation">%fos_user.registration.confirmation.from_email%</argument>
          <argument key="resetting">%fos_user.resetting.email.from_email%</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.mailer.noop" class="FOS\UserBundle\Mailer\NoopMailer" public="false"/>
    <service id="fos_user.listener.authentication" class="FOS\UserBundle\EventListener\AuthenticationListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_user.security.login_manager"/>
      <argument>main</argument>
    </service>
    <service id="fos_user.command.activate_user" class="FOS\UserBundle\Command\ActivateUserCommand">
      <tag name="console.command" command="fos:user:activate"/>
      <argument type="service" id="fos_user.util.user_manipulator"/>
      <call method="setName">
        <argument>fos:user:activate</argument>
      </call>
    </service>
    <service id="fos_user.command.change_password" class="FOS\UserBundle\Command\ChangePasswordCommand">
      <tag name="console.command" command="fos:user:change-password"/>
      <argument type="service" id="fos_user.util.user_manipulator"/>
      <call method="setName">
        <argument>fos:user:change-password</argument>
      </call>
    </service>
    <service id="fos_user.command.create_user" class="FOS\UserBundle\Command\CreateUserCommand">
      <tag name="console.command" command="fos:user:create"/>
      <argument type="service" id="fos_user.util.user_manipulator"/>
      <call method="setName">
        <argument>fos:user:create</argument>
      </call>
    </service>
    <service id="fos_user.command.deactivate_user" class="FOS\UserBundle\Command\DeactivateUserCommand">
      <tag name="console.command" command="fos:user:deactivate"/>
      <argument type="service" id="fos_user.util.user_manipulator"/>
      <call method="setName">
        <argument>fos:user:deactivate</argument>
      </call>
    </service>
    <service id="fos_user.command.demote_user" class="FOS\UserBundle\Command\DemoteUserCommand">
      <tag name="console.command" command="fos:user:demote"/>
      <argument type="service" id="fos_user.util.user_manipulator"/>
      <call method="setName">
        <argument>fos:user:demote</argument>
      </call>
    </service>
    <service id="fos_user.command.promote_user" class="FOS\UserBundle\Command\PromoteUserCommand">
      <tag name="console.command" command="fos:user:promote"/>
      <argument type="service" id="fos_user.util.user_manipulator"/>
      <call method="setName">
        <argument>fos:user:promote</argument>
      </call>
    </service>
    <service id="fos_user.listener.flash" class="FOS\UserBundle\EventListener\FlashListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="fos_user.username_form_type" class="FOS\UserBundle\Form\Type\UsernameFormType">
      <tag name="form.type" alias="fos_user_username"/>
      <argument type="service" id="fos_user.user_to_username_transformer"/>
    </service>
    <service id="fos_user.user_to_username_transformer" class="FOS\UserBundle\Form\DataTransformer\UserToUsernameTransformer" public="false">
      <argument type="service" id="sonata.user.orm.user_manager"/>
    </service>
    <service id="fos_user.profile.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_profile_form</argument>
      <argument>FOS\UserBundle\Form\Type\ProfileFormType</argument>
      <argument>%fos_user.profile.form.validation_groups%</argument>
    </service>
    <service id="fos_user.profile.form.type" class="FOS\UserBundle\Form\Type\ProfileFormType">
      <tag name="form.type" alias="fos_user_profile"/>
      <argument>SiteBundle\Entity\User</argument>
    </service>
    <service id="fos_user.profile.controller" class="FOS\UserBundle\Controller\ProfileController" public="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_user.profile.form.factory"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_user.registration.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_registration_form</argument>
      <argument>FOS\UserBundle\Form\Type\RegistrationFormType</argument>
      <argument>%fos_user.registration.form.validation_groups%</argument>
    </service>
    <service id="fos_user.registration.form.type" class="FOS\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="fos_user_registration"/>
      <argument>SiteBundle\Entity\User</argument>
    </service>
    <service id="fos_user.registration.controller" class="FOS\UserBundle\Controller\RegistrationController" public="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_user.registration.form.factory"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
      <argument type="service" id="security.token_storage"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_user.change_password.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_change_password_form</argument>
      <argument>FOS\UserBundle\Form\Type\ChangePasswordFormType</argument>
      <argument>%fos_user.change_password.form.validation_groups%</argument>
    </service>
    <service id="fos_user.change_password.form.type" class="FOS\UserBundle\Form\Type\ChangePasswordFormType">
      <tag name="form.type" alias="fos_user_change_password"/>
      <argument>SiteBundle\Entity\User</argument>
    </service>
    <service id="fos_user.change_password.controller" class="FOS\UserBundle\Controller\ChangePasswordController" public="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_user.change_password.form.factory"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_user.resetting.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_resetting_form</argument>
      <argument>FOS\UserBundle\Form\Type\ResettingFormType</argument>
      <argument>%fos_user.resetting.form.validation_groups%</argument>
    </service>
    <service id="fos_user.resetting.form.type" class="FOS\UserBundle\Form\Type\ResettingFormType">
      <tag name="form.type" alias="fos_user_resetting"/>
      <argument>SiteBundle\Entity\User</argument>
    </service>
    <service id="fos_user.listener.resetting" class="FOS\UserBundle\EventListener\ResettingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="router.default"/>
      <argument>86400</argument>
    </service>
    <service id="fos_user.resetting.controller" class="FOS\UserBundle\Controller\ResettingController" public="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_user.resetting.form.factory"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
      <argument type="service" id="fos_user.util.token_generator.default"/>
      <argument type="service" id="fos_user.mailer.default"/>
      <argument>7200</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_user.group.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_group_form</argument>
      <argument>FOS\UserBundle\Form\Type\GroupFormType</argument>
      <argument>%fos_user.group.form.validation_groups%</argument>
    </service>
    <service id="fos_user.group.form.type" class="FOS\UserBundle\Form\Type\GroupFormType">
      <tag name="form.type" alias="fos_user_group"/>
      <argument>Sonata\UserBundle\Entity\BaseGroup</argument>
    </service>
    <service id="fos_user.group.controller" class="FOS\UserBundle\Controller\GroupController" public="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_user.group.form.factory"/>
      <argument type="service" id="sonata.user.orm.group_manager"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_user.group_manager.default" class="FOS\UserBundle\Doctrine\GroupManager" public="false">
      <argument type="service" id="fos_user.object_manager"/>
      <argument>Sonata\UserBundle\Entity\BaseGroup</argument>
    </service>
    <service id="sonata.user.editable_role_builder" class="Sonata\UserBundle\Security\EditableRolesBuilder">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument>%security.role_hierarchy.roles%</argument>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
      </call>
    </service>
    <service id="sonata.user.form.type.security_roles" class="Sonata\UserBundle\Form\Type\SecurityRolesType">
      <tag name="form.type" alias="sonata_security_roles"/>
      <argument type="service" id="sonata.user.editable_role_builder"/>
    </service>
    <service id="sonata.user.admin.user" class="Sonata\UserBundle\Admin\Entity\UserAdmin" shared="false" public="true">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.user.admin.groupname%" label="users" label_catalogue="%sonata.user.admin.label_catalogue%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.user.admin.groupicon%"/>
      <argument>sonata.user.admin.user</argument>
      <argument>Sonata\UserBundle\Entity\BaseUser</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setUserManager">
        <argument type="service" id="sonata.user.orm.user_manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataUserBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>users</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.user.admin.user.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.user.admin.group" class="Sonata\UserBundle\Admin\Entity\GroupAdmin" shared="false" public="true">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.user.admin.groupname%" label="groups" label_catalogue="%sonata.user.admin.label_catalogue%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.user.admin.group</argument>
      <argument>Sonata\UserBundle\Entity\BaseGroup</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataUserBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>groups</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.user.admin.group.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.user.orm.user_manager" class="Sonata\UserBundle\Entity\UserManager" public="false">
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
      <argument type="service" id="fos_user.object_manager"/>
      <argument>SiteBundle\Entity\User</argument>
    </service>
    <service id="sonata.user.manager.user" class="Sonata\UserBundle\Entity\UserManagerProxy">
      <argument>SiteBundle\Entity\User</argument>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
    </service>
    <service id="sonata.user.orm.group_manager" class="Sonata\UserBundle\Entity\GroupManager" public="false">
      <argument type="service" id="fos_user.object_manager"/>
      <argument>Sonata\UserBundle\Entity\BaseGroup</argument>
    </service>
    <service id="sonata.user.form.gender_list" class="Sonata\UserBundle\Form\Type\UserGenderListType">
      <tag name="form.type" alias="sonata_user_gender"/>
      <argument>SiteBundle\Entity\User</argument>
      <argument>getGenderList</argument>
      <argument>Sonata\UserBundle\Form\Type\UserGenderListType</argument>
      <deprecated>The "%service_id%" service is deprecated since 4.x and will be removed in 5.0.</deprecated>
    </service>
    <service id="sonata.user.twig.global" class="Sonata\UserBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="security.acl.voter.user_permissions" class="Sonata\UserBundle\Security\Authorization\Voter\UserAclVoter" public="false">
      <tag name="monolog.logger" channel="security"/>
      <tag name="security.voter" priority="255"/>
      <argument type="service" id="security.acl.dbal.provider"/>
      <argument type="service" id="security.acl.object_identity_retrieval_strategy"/>
      <argument type="service" id="security.acl.security_identity_retrieval_strategy"/>
      <argument type="service" id="security.acl.permission.map"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="sonata.admin.gallery_page" class="GalleryBundle\Admin\GalleryPageAdmin" shared="false" public="true">
      <tag name="sonata.admin" manager_type="orm" label="Gallery pages"/>
      <argument>sonata.admin.gallery_page</argument>
      <argument>GalleryBundle\Entity\GalleryPage</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Gallery pages</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.admin.gallery_page.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.admin.slide" class="GalleryBundle\Admin\SlideAdmin" shared="false" public="true">
      <tag name="sonata.admin" manager_type="orm" label="Gallery page slides"/>
      <argument>sonata.admin.slide</argument>
      <argument>GalleryBundle\Entity\Slide</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Gallery page slides</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.admin.slide.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="app.gallery.unserialize_filter" class="GalleryBundle\Twig\UnserializeExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.admin.orders" class="LandingBundle\Admin\OrderAdmin" shared="false" public="true">
      <tag name="sonata.admin" manager_type="orm" group="Order" label="Orders"/>
      <argument>sonata.admin.orders</argument>
      <argument>LandingBundle\Entity\Order</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Orders</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.admin.orders.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.admin.order_items" class="LandingBundle\Admin\OrderItemAdmin" shared="false" public="true">
      <tag name="sonata.admin" manager_type="orm" group="Order" label="Orders"/>
      <argument>sonata.admin.order_items</argument>
      <argument>LandingBundle\Entity\OrderItem</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Orders</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.admin.order_items.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="admin_success_handler" class="LandingBundle\Services\AuthenticationHandler">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.video" class="SiteBundle\Admin\VideoAdmin" shared="false" public="true">
      <tag name="sonata.admin" manager_type="orm" label="Videos"/>
      <argument>sonata.admin.video</argument>
      <argument>SiteBundle\Entity\Video</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="debug.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Videos</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.admin.video.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector" public="true">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.cli_dumper"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner" public="true">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMinDepth">
        <argument>1</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
    </service>
    <service id="var_dumper.cli_dumper" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="2_HtmlDumper~lsvuelm" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id="1_NonceGenerator~lsvuelm" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument>bottom</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/Users/drolya/Public/visualmasters</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id="1_NonceGenerator~lsvuelm"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="2_HtmlDumper~lsvuelm"/>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string" public="false">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument>bottom</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="sensio_distribution.security_checker" class="SensioLabs\Security\SecurityChecker"/>
    <service id="sensio_distribution.security_checker.command" class="SensioLabs\Security\Command\SecurityCheckerCommand">
      <tag name="console.command"/>
      <argument type="service" id="sensio_distribution.security_checker"/>
      <call method="setName">
        <argument>security:check</argument>
      </call>
    </service>
    <service id="web_server.command.server_run" class="Symfony\Bundle\WebServerBundle\Command\ServerRunCommand" public="false">
      <tag name="console.command" command="server:run"/>
      <argument>/Users/drolya/Public/visualmasters/public</argument>
      <argument>dev</argument>
      <call method="setName">
        <argument>server:run</argument>
      </call>
    </service>
    <service id="web_server.command.server_start" class="Symfony\Bundle\WebServerBundle\Command\ServerStartCommand" public="false">
      <tag name="console.command" command="server:start"/>
      <argument>/Users/drolya/Public/visualmasters/public</argument>
      <argument>dev</argument>
      <call method="setName">
        <argument>server:start</argument>
      </call>
    </service>
    <service id="web_server.command.server_stop" class="Symfony\Bundle\WebServerBundle\Command\ServerStopCommand" public="false">
      <tag name="console.command" command="server:stop"/>
      <call method="setName">
        <argument>server:stop</argument>
      </call>
    </service>
    <service id="web_server.command.server_status" class="Symfony\Bundle\WebServerBundle\Command\ServerStatusCommand" public="false">
      <tag name="console.command" command="server:status"/>
      <call method="setName">
        <argument>server:status</argument>
      </call>
    </service>
    <service id="web_server.command.server_log" class="Symfony\Bundle\WebServerBundle\Command\ServerLogCommand" public="false">
      <tag name="console.command" command="server:log"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
    </service>
    <service id="service_locator.sr6ctxe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id="service_locator.3wy6vfo"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="init:acl">security.command.init_acl</argument>
        <argument key="acl:set">security.command.set_acl</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:generate:entities">doctrine.generate_entities_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="fos:user:activate">fos_user.command.activate_user</argument>
        <argument key="fos:user:change-password">fos_user.command.change_password</argument>
        <argument key="fos:user:create">fos_user.command.create_user</argument>
        <argument key="fos:user:deactivate">fos_user.command.deactivate_user</argument>
        <argument key="fos:user:demote">fos_user.command.demote_user</argument>
        <argument key="fos:user:promote">fos_user.command.promote_user</argument>
        <argument key="security:check">sensio_distribution.security_checker.command</argument>
        <argument key="server:run">web_server.command.server_run</argument>
        <argument key="server:start">web_server.command.server_start</argument>
        <argument key="server:stop">web_server.command.server_stop</argument>
        <argument key="server:status">web_server.command.server_status</argument>
        <argument key="server:log">web_server.command.server_log</argument>
      </argument>
    </service>
    <service id="service_locator.3wy6vfo" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.generate_entities_command" type="service" id="doctrine.generate_entities_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="fos_user.command.activate_user" type="service" id="fos_user.command.activate_user"/>
        <argument key="fos_user.command.change_password" type="service" id="fos_user.command.change_password"/>
        <argument key="fos_user.command.create_user" type="service" id="fos_user.command.create_user"/>
        <argument key="fos_user.command.deactivate_user" type="service" id="fos_user.command.deactivate_user"/>
        <argument key="fos_user.command.demote_user" type="service" id="fos_user.command.demote_user"/>
        <argument key="fos_user.command.promote_user" type="service" id="fos_user.command.promote_user"/>
        <argument key="security.command.init_acl" type="service" id="security.command.init_acl"/>
        <argument key="security.command.set_acl" type="service" id="security.command.set_acl"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="sensio_distribution.security_checker.command" type="service" id="sensio_distribution.security_checker.command"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
        <argument key="web_server.command.server_log" type="service" id="web_server.command.server_log"/>
        <argument key="web_server.command.server_run" type="service" id="web_server.command.server_run"/>
        <argument key="web_server.command.server_start" type="service" id="web_server.command.server_start"/>
        <argument key="web_server.command.server_status" type="service" id="web_server.command.server_status"/>
        <argument key="web_server.command.server_stop" type="service" id="web_server.command.server_stop"/>
      </argument>
    </service>
    <service id="service_locator.yepb.pt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id="service_locator.o0cobhk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="hinclude" type="service" id="fragment.renderer.hinclude"/>
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="service_locator.q8wi7zn" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="FOS\UserBundle\Form\Type\ChangePasswordFormType" type="service" id="fos_user.change_password.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\GroupFormType" type="service" id="fos_user.group.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\ProfileFormType" type="service" id="fos_user.profile.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\RegistrationFormType" type="service" id="fos_user.registration.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\ResettingFormType" type="service" id="fos_user.resetting.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\UsernameFormType" type="service" id="fos_user.username_form_type"/>
        <argument key="Sonata\AdminBundle\Form\Type\AdminType" type="service" id="sonata.admin.form.type.admin"/>
        <argument key="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType" type="service" id="sonata.admin.doctrine_orm.form.type.choice_field_mask"/>
        <argument key="Sonata\AdminBundle\Form\Type\CollectionType" type="service" id="sonata.admin.form.type.collection"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\ChoiceType" type="service" id="sonata.admin.form.filter.type.choice"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateRangeType" type="service" id="sonata.admin.form.filter.type.daterange"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType" type="service" id="sonata.admin.form.filter.type.datetime_range"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeType" type="service" id="sonata.admin.form.filter.type.datetime"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateType" type="service" id="sonata.admin.form.filter.type.date"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DefaultType" type="service" id="sonata.admin.form.filter.type.default"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\NumberType" type="service" id="sonata.admin.form.filter.type.number"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelAutocompleteType" type="service" id="sonata.admin.form.type.model_autocomplete"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelHiddenType" type="service" id="sonata.admin.form.type.model_hidden"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelListType" type="service" id="sonata.admin.form.type.model_list"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelReferenceType" type="service" id="sonata.admin.form.type.model_reference"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelType" type="service" id="sonata.admin.form.type.model_choice"/>
        <argument key="Sonata\BlockBundle\Form\Type\ContainerTemplateType" type="service" id="sonata.block.form.type.container_template"/>
        <argument key="Sonata\BlockBundle\Form\Type\ServiceListType" type="service" id="sonata.block.form.type.block"/>
        <argument key="Sonata\CoreBundle\Form\Type\BooleanType" type="service" id="sonata.core.form.type.boolean"/>
        <argument key="Sonata\CoreBundle\Form\Type\CollectionType" type="service" id="sonata.core.form.type.collection"/>
        <argument key="Sonata\CoreBundle\Form\Type\ColorSelectorType" type="service" id="sonata.core.form.type.color_selector"/>
        <argument key="Sonata\CoreBundle\Form\Type\ColorType" type="service" id="sonata.core.form.type.color"/>
        <argument key="Sonata\CoreBundle\Form\Type\DatePickerType" type="service" id="sonata.core.form.type.date_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangePickerType" type="service" id="sonata.core.form.type.date_range_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangeType" type="service" id="sonata.core.form.type.date_range"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimePickerType" type="service" id="sonata.core.form.type.datetime_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType" type="service" id="sonata.core.form.type.datetime_range_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangeType" type="service" id="sonata.core.form.type.datetime_range"/>
        <argument key="Sonata\CoreBundle\Form\Type\EqualType" type="service" id="sonata.core.form.type.equal"/>
        <argument key="Sonata\CoreBundle\Form\Type\ImmutableArrayType" type="service" id="sonata.core.form.type.array"/>
        <argument key="Sonata\CoreBundle\Form\Type\TranslatableChoiceType" type="service" id="sonata.core.form.type.translatable_choice"/>
        <argument key="Sonata\MediaBundle\Form\Type\MediaType" type="service" id="sonata.media.form.type.media"/>
        <argument key="Sonata\UserBundle\Form\Type\SecurityRolesType" type="service" id="sonata.user.form.type.security_roles"/>
        <argument key="Sonata\UserBundle\Form\Type\UserGenderListType" type="service" id="sonata.user.form.gender_list"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
      </argument>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.assetic" class="Symfony\Bridge\Monolog\Logger">
      <argument>assetic</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="assetic.twig_directory_resource.SiteBundle" class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
      <tag name="assetic.templating.twig"/>
      <tag name="assetic.formula_resource" loader="twig"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <argument type="service" id="templating.loader.filesystem"/>
            <argument>SiteBundle</argument>
            <argument>/Users/drolya/Public/visualmasters/app/Resources/SiteBundle/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <argument type="service" id="templating.loader.filesystem"/>
            <argument>SiteBundle</argument>
            <argument>/Users/drolya/Public/visualmasters/src/SiteBundle/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="assetic.twig_directory_resource.GalleryBundle" class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
      <tag name="assetic.templating.twig"/>
      <tag name="assetic.formula_resource" loader="twig"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <argument type="service" id="templating.loader.filesystem"/>
            <argument>GalleryBundle</argument>
            <argument>/Users/drolya/Public/visualmasters/app/Resources/GalleryBundle/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <argument type="service" id="templating.loader.filesystem"/>
            <argument>GalleryBundle</argument>
            <argument>/Users/drolya/Public/visualmasters/src/GalleryBundle/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="assetic.twig_directory_resource.SonataAdminBundle" class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
      <tag name="assetic.templating.twig"/>
      <tag name="assetic.formula_resource" loader="twig"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <argument type="service" id="templating.loader.filesystem"/>
            <argument>SonataAdminBundle</argument>
            <argument>/Users/drolya/Public/visualmasters/app/Resources/SonataAdminBundle/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <argument type="service" id="templating.loader.filesystem"/>
            <argument>SonataAdminBundle</argument>
            <argument>/Users/drolya/Public/visualmasters/vendor/sonata-project/admin-bundle/src/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="assetic.twig_directory_resource.LandingBundle" class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
      <tag name="assetic.templating.twig"/>
      <tag name="assetic.formula_resource" loader="twig"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <argument type="service" id="templating.loader.filesystem"/>
            <argument>LandingBundle</argument>
            <argument>/Users/drolya/Public/visualmasters/app/Resources/LandingBundle/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <argument type="service" id="templating.loader.filesystem"/>
            <argument>LandingBundle</argument>
            <argument>/Users/drolya/Public/visualmasters/src/LandingBundle/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="assetic.twig_directory_resource.kernel" class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
      <tag name="assetic.templating.twig"/>
      <tag name="assetic.formula_resource" loader="twig"/>
      <argument type="service" id="templating.loader.filesystem"/>
      <argument></argument>
      <argument>/Users/drolya/Public/visualmasters/app/Resources/views</argument>
      <argument>/\.[^.]+\.twig$/</argument>
    </service>
    <service id="form.extension" class="Sonata\CoreBundle\Form\Extension\DependencyInjectionExtension">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType">form.type.form</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType">form.type.choice</argument>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType">form.type.entity</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ImmutableArrayType">sonata.core.form.type.array</argument>
        <argument key="Sonata\CoreBundle\Form\Type\BooleanType">sonata.core.form.type.boolean</argument>
        <argument key="Sonata\CoreBundle\Form\Type\CollectionType">sonata.core.form.type.collection</argument>
        <argument key="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">sonata.core.form.type.translatable_choice</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangeType">sonata.core.form.type.date_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangeType">sonata.core.form.type.datetime_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DatePickerType">sonata.core.form.type.date_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimePickerType">sonata.core.form.type.datetime_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangePickerType">sonata.core.form.type.date_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">sonata.core.form.type.datetime_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\EqualType">sonata.core.form.type.equal</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ColorSelectorType">sonata.core.form.type.color_selector</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ColorType">sonata.core.form.type.color</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ServiceListType">sonata.block.form.type.block</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ContainerTemplateType">sonata.block.form.type.container_template</argument>
        <argument key="Sonata\AdminBundle\Form\Type\AdminType">sonata.admin.form.type.admin</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelType">sonata.admin.form.type.model_choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelListType">sonata.admin.form.type.model_list</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelReferenceType">sonata.admin.form.type.model_reference</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelHiddenType">sonata.admin.form.type.model_hidden</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">sonata.admin.form.type.model_autocomplete</argument>
        <argument key="Sonata\AdminBundle\Form\Type\CollectionType">sonata.admin.form.type.collection</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType">sonata.admin.doctrine_orm.form.type.choice_field_mask</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\NumberType">sonata.admin.form.filter.type.number</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">sonata.admin.form.filter.type.choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DefaultType">sonata.admin.form.filter.type.default</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateType">sonata.admin.form.filter.type.date</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">sonata.admin.form.filter.type.daterange</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">sonata.admin.form.filter.type.datetime</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">sonata.admin.form.filter.type.datetime_range</argument>
        <argument key="Sonata\MediaBundle\Form\Type\MediaType">sonata.media.form.type.media</argument>
        <argument key="FOS\UserBundle\Form\Type\UsernameFormType">fos_user.username_form_type</argument>
        <argument key="FOS\UserBundle\Form\Type\ProfileFormType">fos_user.profile.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\RegistrationFormType">fos_user.registration.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ChangePasswordFormType">fos_user.change_password.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ResettingFormType">fos_user.resetting.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\GroupFormType">fos_user.group.form.type</argument>
        <argument key="Sonata\UserBundle\Form\Type\SecurityRolesType">sonata.user.form.type.security_roles</argument>
        <argument key="Sonata\UserBundle\Form\Type\UserGenderListType">sonata.user.form.gender_list</argument>
      </argument>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="collection">
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.upload.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>sonata.admin.form.extension.field</argument>
          <argument>sonata.admin.form.extension.field.mopa</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="collection">
          <argument>form.type_extension.submit.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="collection">
          <argument>sonata.admin.form.extension.choice</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument>form.type_guesser.validator</argument>
        <argument>form.type_guesser.doctrine</argument>
      </argument>
      <argument type="collection">
        <argument key="form">Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument key="birthday">Symfony\Component\Form\Extension\Core\Type\BirthdayType</argument>
        <argument key="checkbox">Symfony\Component\Form\Extension\Core\Type\CheckboxType</argument>
        <argument key="choice">Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument key="collection">Symfony\Component\Form\Extension\Core\Type\CollectionType</argument>
        <argument key="country">Symfony\Component\Form\Extension\Core\Type\CountryType</argument>
        <argument key="date">Symfony\Component\Form\Extension\Core\Type\DateType</argument>
        <argument key="datetime">Symfony\Component\Form\Extension\Core\Type\DateTimeType</argument>
        <argument key="email">Symfony\Component\Form\Extension\Core\Type\EmailType</argument>
        <argument key="file">Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument key="hidden">Symfony\Component\Form\Extension\Core\Type\HiddenType</argument>
        <argument key="integer">Symfony\Component\Form\Extension\Core\Type\IntegerType</argument>
        <argument key="language">Symfony\Component\Form\Extension\Core\Type\LanguageType</argument>
        <argument key="locale">Symfony\Component\Form\Extension\Core\Type\LocaleType</argument>
        <argument key="money">Symfony\Component\Form\Extension\Core\Type\MoneyType</argument>
        <argument key="number">Symfony\Component\Form\Extension\Core\Type\NumberType</argument>
        <argument key="password">Symfony\Component\Form\Extension\Core\Type\PasswordType</argument>
        <argument key="percent">Symfony\Component\Form\Extension\Core\Type\PercentType</argument>
        <argument key="radio">Symfony\Component\Form\Extension\Core\Type\RadioType</argument>
        <argument key="repeated">Symfony\Component\Form\Extension\Core\Type\RepeatedType</argument>
        <argument key="search">Symfony\Component\Form\Extension\Core\Type\SearchType</argument>
        <argument key="textarea">Symfony\Component\Form\Extension\Core\Type\TextareaType</argument>
        <argument key="text">Symfony\Component\Form\Extension\Core\Type\TextType</argument>
        <argument key="time">Symfony\Component\Form\Extension\Core\Type\TimeType</argument>
        <argument key="timezone">Symfony\Component\Form\Extension\Core\Type\TimezoneType</argument>
        <argument key="url">Symfony\Component\Form\Extension\Core\Type\UrlType</argument>
        <argument key="button">Symfony\Component\Form\Extension\Core\Type\ButtonType</argument>
        <argument key="submit">Symfony\Component\Form\Extension\Core\Type\SubmitType</argument>
        <argument key="reset">Symfony\Component\Form\Extension\Core\Type\ResetType</argument>
        <argument key="currency">Symfony\Component\Form\Extension\Core\Type\CurrencyType</argument>
        <argument key="entity">Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument key="sonata_type_immutable_array">Sonata\CoreBundle\Form\Type\ImmutableArrayType</argument>
        <argument key="sonata_type_boolean">Sonata\CoreBundle\Form\Type\BooleanType</argument>
        <argument key="sonata_type_collection">Sonata\CoreBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_translatable_choice">Sonata\CoreBundle\Form\Type\TranslatableChoiceType</argument>
        <argument key="sonata_type_date_range">Sonata\CoreBundle\Form\Type\DateRangeType</argument>
        <argument key="sonata_type_datetime_range">Sonata\CoreBundle\Form\Type\DateTimeRangeType</argument>
        <argument key="sonata_type_date_picker">Sonata\CoreBundle\Form\Type\DatePickerType</argument>
        <argument key="sonata_type_datetime_picker">Sonata\CoreBundle\Form\Type\DateTimePickerType</argument>
        <argument key="sonata_type_date_range_picker">Sonata\CoreBundle\Form\Type\DateRangePickerType</argument>
        <argument key="sonata_type_datetime_range_picker">Sonata\CoreBundle\Form\Type\DateTimeRangePickerType</argument>
        <argument key="sonata_type_equal">Sonata\CoreBundle\Form\Type\EqualType</argument>
        <argument key="sonata_type_color">Sonata\CoreBundle\Form\Type\ColorType</argument>
        <argument key="sonata_type_color_selector">Sonata\CoreBundle\Form\Type\ColorSelectorType</argument>
        <argument key="sonata_block_service_choice">Sonata\BlockBundle\Form\Type\ServiceListType</argument>
        <argument key="sonata_type_container_template_choice">Sonata\BlockBundle\Form\Type\ContainerTemplateType</argument>
        <argument key="sonata_type_admin">Sonata\AdminBundle\Form\Type\AdminType</argument>
        <argument key="sonata_type_model">Sonata\AdminBundle\Form\Type\ModelType</argument>
        <argument key="sonata_type_model_list">Sonata\AdminBundle\Form\Type\ModelListType</argument>
        <argument key="sonata_type_model_reference">Sonata\AdminBundle\Form\Type\ModelReferenceType</argument>
        <argument key="sonata_type_model_hidden">Sonata\AdminBundle\Form\Type\ModelHiddenType</argument>
        <argument key="sonata_type_model_autocomplete">Sonata\AdminBundle\Form\Type\ModelAutocompleteType</argument>
        <argument key="sonata_type_native_collection">Sonata\AdminBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_choice_field_mask">Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType</argument>
        <argument key="sonata_type_filter_number">Sonata\AdminBundle\Form\Type\Filter\NumberType</argument>
        <argument key="sonata_type_filter_choice">Sonata\AdminBundle\Form\Type\Filter\ChoiceType</argument>
        <argument key="sonata_type_filter_default">Sonata\AdminBundle\Form\Type\Filter\DefaultType</argument>
        <argument key="sonata_type_filter_date">Sonata\AdminBundle\Form\Type\Filter\DateType</argument>
        <argument key="sonata_type_filter_date_range">Sonata\AdminBundle\Form\Type\Filter\DateRangeType</argument>
        <argument key="sonata_type_filter_datetime">Sonata\AdminBundle\Form\Type\Filter\DateTimeType</argument>
        <argument key="sonata_type_filter_datetime_range">Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType</argument>
        <argument key="tab">Mopa\Bundle\BootstrapBundle\Form\Type\TabType</argument>
        <argument key="sonata_media_type">Sonata\MediaBundle\Form\Type\MediaType</argument>
        <argument key="sonata_media_api_form_media">Sonata\MediaBundle\Form\Type\ApiMediaType</argument>
        <argument key="sonata_media_api_form_doctrine_media">Sonata\MediaBundle\Form\Type\ApiDoctrineMediaType</argument>
        <argument key="sonata_media_api_form_gallery">Sonata\MediaBundle\Form\Type\ApiGalleryType</argument>
        <argument key="sonata_media_api_form_gallery_has_media">Sonata\MediaBundle\Form\Type\ApiGalleryHasMediaType</argument>
        <argument key="fos_user_username">FOS\UserBundle\Form\Type\UsernameFormType</argument>
        <argument key="fos_user_profile">FOS\UserBundle\Form\Type\ProfileFormType</argument>
        <argument key="fos_user_registration">FOS\UserBundle\Form\Type\RegistrationFormType</argument>
        <argument key="fos_user_change_password">FOS\UserBundle\Form\Type\ChangePasswordFormType</argument>
        <argument key="fos_user_resetting">FOS\UserBundle\Form\Type\ResettingFormType</argument>
        <argument key="fos_user_group">FOS\UserBundle\Form\Type\GroupFormType</argument>
        <argument key="sonata_security_roles">Sonata\UserBundle\Form\Type\SecurityRolesType</argument>
        <argument key="sonata_user_profile">Sonata\UserBundle\Form\Type\ProfileType</argument>
        <argument key="sonata_user_gender">Sonata\UserBundle\Form\Type\UserGenderListType</argument>
        <argument key="sonata_user_registration">Sonata\UserBundle\Form\Type\RegistrationFormType</argument>
        <argument key="sonata_user_api_form_group">Sonata\UserBundle\Form\Type\ApiGroupType</argument>
        <argument key="sonata_user_api_form_user">Sonata\UserBundle\Form\Type\ApiUserType</argument>
      </argument>
      <argument type="collection">
        <argument key="form" type="collection">
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>sonata.admin.form.extension.field</argument>
          <argument>mopa_bootstrap.form.type_extension.help</argument>
          <argument>mopa_bootstrap.form.type_extension.legend</argument>
          <argument>mopa_bootstrap.form.type_extension.error</argument>
          <argument>mopa_bootstrap.form.type_extension.widget</argument>
          <argument>mopa_bootstrap.form.type_extension.horizontal</argument>
          <argument>mopa_bootstrap.form.type_extension.widget_collection</argument>
          <argument>mopa_bootstrap.form.type_extension.tabbed</argument>
        </argument>
        <argument key="repeated" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="submit" type="collection">
          <argument>form.type_extension.submit.validator</argument>
        </argument>
        <argument key="choice" type="collection">
          <argument>sonata.admin.form.extension.choice</argument>
        </argument>
        <argument key="button" type="collection">
          <argument>mopa_bootstrap.form.type_extension.button</argument>
        </argument>
        <argument key="date" type="collection">
          <argument>mopa_bootstrap.form.type_extension.date</argument>
        </argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="service_locator.hskmc8u" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="list" type="service" id="knp_menu.renderer.list"/>
        <argument key="twig" type="service" id="knp_menu.renderer.twig"/>
      </argument>
    </service>
    <service id="sonata.media.admin.media.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry" public="true">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="short_object_description">::Admin/Helper/short-object-description.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="layout">@SonataAdmin/standard_layout.html.twig</argument>
        <argument key="ajax">@SonataAdmin/ajax_layout.html.twig</argument>
        <argument key="dashboard">@SonataAdmin/Core/dashboard.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="list">@SonataMedia/MediaAdmin/list.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show">@SonataAdmin/CRUD/show.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="edit">@SonataMedia/MediaAdmin/edit.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="history_revision_timestamp">@SonataAdmin/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataMedia/MediaAdmin/inner_row_media.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataMedia/MediaAdmin/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="base_list_field">@SonataAdmin/CRUD/base_list_flat_field.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.media.admin.gallery.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry" public="true">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="short_object_description">::Admin/Helper/short-object-description.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="layout">@SonataAdmin/standard_layout.html.twig</argument>
        <argument key="ajax">@SonataAdmin/ajax_layout.html.twig</argument>
        <argument key="dashboard">@SonataAdmin/Core/dashboard.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="list">@SonataMedia/GalleryAdmin/list.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show">@SonataAdmin/CRUD/show.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="edit">@SonataAdmin/CRUD/edit.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="history_revision_timestamp">@SonataAdmin/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="base_list_field">@SonataAdmin/CRUD/base_list_field.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.media.admin.gallery_has_media.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry" public="true">
      <tag name="sonata.admin.template_registry"/>
      <argument>%sonata.admin.configuration.templates%</argument>
    </service>
    <service id="sonata.user.admin.user.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry" public="true">
      <tag name="sonata.admin.template_registry"/>
      <argument>%sonata.admin.configuration.templates%</argument>
    </service>
    <service id="sonata.user.admin.group.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry" public="true">
      <tag name="sonata.admin.template_registry"/>
      <argument>%sonata.admin.configuration.templates%</argument>
    </service>
    <service id="sonata.admin.gallery_page.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry" public="true">
      <tag name="sonata.admin.template_registry"/>
      <argument>%sonata.admin.configuration.templates%</argument>
    </service>
    <service id="sonata.admin.slide.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry" public="true">
      <tag name="sonata.admin.template_registry"/>
      <argument>%sonata.admin.configuration.templates%</argument>
    </service>
    <service id="sonata.admin.orders.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry" public="true">
      <tag name="sonata.admin.template_registry"/>
      <argument>%sonata.admin.configuration.templates%</argument>
    </service>
    <service id="sonata.admin.order_items.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry" public="true">
      <tag name="sonata.admin.template_registry"/>
      <argument>%sonata.admin.configuration.templates%</argument>
    </service>
    <service id="sonata.admin.video.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry" public="true">
      <tag name="sonata.admin.template_registry"/>
      <argument>%sonata.admin.configuration.templates%</argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="false">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="argument_resolver.request_attribute"/>
        <argument type="service" id="argument_resolver.request"/>
        <argument type="service" id="argument_resolver.session"/>
        <argument type="service" id="security.user_value_resolver"/>
        <argument type="service" id="argument_resolver.service"/>
        <argument type="service" id="argument_resolver.default"/>
        <argument type="service" id="argument_resolver.variadic"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.acl.voter.basic_permissions"/>
        <argument type="service" id="security.acl.voter.user_permissions"/>
        <argument type="service" id="security.access.authenticated_voter"/>
        <argument type="service" id="security.access.role_hierarchy_voter"/>
        <argument type="service" id="security.access.expression_voter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="service_locator.s.m3yzc" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id="service_locator.s.m3yzc.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service="service_locator.s.m3yzc" method="withContext"/>
    </service>
    <service id="service_locator.lluwcxp" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id="service_locator.lluwcxp.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service="service_locator.lluwcxp" method="withContext"/>
    </service>
    <service id="service_locator.c7_qahl" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id="service_locator.c7_qahl.twig.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>twig.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service="service_locator.c7_qahl" method="withContext"/>
    </service>
    <service id="service_locator.2m3e4be" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id="service_locator.2m3e4be.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service="service_locator.2m3e4be" method="withContext"/>
    </service>
    <service id="service_locator.5z417li" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Sonata\CoreBundle\Validator\InlineValidator" type="service" id="sonata.admin.validator.inline"/>
        <argument key="Sonata\MediaBundle\Validator\FormatValidator" type="service" id="sonata.media.validator.format"/>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="sonata.admin.validator.inline" type="service" id="sonata.admin.validator.inline"/>
        <argument key="sonata.core.validator.inline" type="service" id="sonata.core.validator.inline"/>
        <argument key="sonata.media.validator.format" type="service" id="sonata.media.validator.format"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false">
      <argument>8ia3UwWNln</argument>
      <argument>0</argument>
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>aLuj4bO77L</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>EWXzDQyKKm</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>mXRgjPVkxf</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>HXSxjIu1oa</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/drolya/Public/visualmasters/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="service_locator.sng9lji" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="JMS\Serializer\Twig\SerializerRuntimeHelper" type="service" id="jms_serializer.twig_extension.serializer_runtime_helper"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="service_locator.orfjtul" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jms_serializer.doctrine_proxy_subscriber" type="service" id="jms_serializer.doctrine_proxy_subscriber"/>
        <argument key="jms_serializer.stopwatch_subscriber" type="service" id="jms_serializer.stopwatch_subscriber"/>
      </argument>
    </service>
    <service id="service_locator.hyech7z" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jms_serializer.array_collection_handler" type="service" id="jms_serializer.array_collection_handler"/>
        <argument key="jms_serializer.constraint_violation_handler" type="service" id="jms_serializer.constraint_violation_handler"/>
        <argument key="jms_serializer.datetime_handler" type="service" id="jms_serializer.datetime_handler"/>
        <argument key="jms_serializer.form_error_handler" type="service" id="jms_serializer.form_error_handler"/>
        <argument key="jms_serializer.php_collection_handler" type="service" id="jms_serializer.php_collection_handler"/>
        <argument key="sonata.media.serializer.handler.gallery" type="service" id="sonata.media.serializer.handler.gallery"/>
        <argument key="sonata.media.serializer.handler.media" type="service" id="sonata.media.serializer.handler.media"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Translation\TranslatorInterface" alias="translator.data_collector" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler.native_file" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="session.handler" alias="session.handler.native_file"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="templating.loader" alias="templating.loader.filesystem" public="true"/>
    <service id="templating" alias="templating.engine.twig" public="true"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator" public="false"/>
    <service id="translator" alias="translator.data_collector" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="cache.default_redis_provider" alias="cache_connection.gd_mszc" public="false"/>
    <service id="cache.default_memcached_provider" alias="cache_connection.jke6kex" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall"/>
    <service id="security.user.provider.concrete.fos_userbundle" alias="fos_user.user_provider.username" public="false"/>
    <service id="security.user_checker.admin" alias="security.user_checker" public="false"/>
    <service id="security.user_checker.main" alias="security.user_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker" public="false"/>
    <service id="security.acl.dbal.connection" alias="doctrine.dbal.default_connection"/>
    <service id="security.acl.provider" alias="security.acl.dbal.provider"/>
    <service id="Symfony\Component\Security\Acl\Model\AclProviderInterface" alias="security.acl.dbal.provider" public="false"/>
    <service id="security.acl.cache.doctrine.cache_impl" alias="doctrine_cache.providers.doctrine.orm.default_result_cache" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="swiftmailer.mailer.default.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="swiftmailer.mailer.default.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.mailer.default.transport.real" alias="swiftmailer.mailer.default.transport.smtp" public="true"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.smtp"/>
    <service id="Swift_Spool" alias="swiftmailer.mailer.default.spool.memory" public="false"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.default" public="false"/>
    <service id="Swift_Transport" alias="swiftmailer.mailer.default.transport.spool" public="false"/>
    <service id="mailer" alias="swiftmailer.mailer.default" public="true"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Symfony\Bridge\Doctrine\RegistryInterface" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\Common\Persistence\ObjectManager" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache" public="true"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache" public="true"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache" public="true"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default" public="false"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default" public="false"/>
    <service id="assetic.value_supplier" alias="assetic.value_supplier.default" public="false"/>
    <service id="sonata.block.context_manager" alias="sonata.block.context_manager.default"/>
    <service id="sonata.block.cache.handler" alias="sonata.block.cache.handler.default"/>
    <service id="sonata.block.renderer" alias="sonata.block.renderer.default"/>
    <service id="Knp\Menu\FactoryInterface" alias="knp_menu.factory" public="false"/>
    <service id="Knp\Menu\Matcher\MatcherInterface" alias="knp_menu.matcher" public="false"/>
    <service id="Knp\Menu\Util\MenuManipulator" alias="knp_menu.manipulator" public="false"/>
    <service id="Sonata\AdminBundle\Admin\Pool" alias="sonata.admin.pool"/>
    <service id="sonata.admin.security.handler" alias="sonata.admin.security.handler.noop"/>
    <service id="sonata.media.adapter.image.default" alias="sonata.media.adapter.image.gd"/>
    <service id="sonata.media.resizer.default" alias="sonata.media.resizer.simple"/>
    <service id="jms_serializer.metadata_driver" alias="jms_serializer.metadata.doctrine_type_driver" public="true"/>
    <service id="jms_serializer.metadata.cache" alias="jms_serializer.metadata.cache.file_cache" public="false"/>
    <service id="jms_serializer.naming_strategy" alias="jms_serializer.cache_naming_strategy"/>
    <service id="jms_serializer.object_constructor" alias="jms_serializer.doctrine_object_constructor" public="true"/>
    <service id="jms_serializer.deserialization_context_factory" alias="jms_serializer.configured_deserialization_context_factory" public="true"/>
    <service id="jms_serializer.serialization_context_factory" alias="jms_serializer.configured_serialization_context_factory" public="true"/>
    <service id="jms_serializer" alias="jms_serializer.serializer" public="true"/>
    <service id="JMS\Serializer\SerializerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="JMS\Serializer\ArrayTransformerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="jms_serializer.accessor_strategy" alias="jms_serializer.accessor_strategy.expression"/>
    <service id="fos_user.doctrine_registry" alias="doctrine" public="false"/>
    <service id="FOS\UserBundle\Security\LoginManagerInterface" alias="fos_user.security.login_manager" public="false"/>
    <service id="FOS\UserBundle\Util\TokenGeneratorInterface" alias="fos_user.util.token_generator.default" public="false"/>
    <service id="FOS\UserBundle\Util\PasswordUpdaterInterface" alias="fos_user.util.password_updater" public="false"/>
    <service id="FOS\UserBundle\Util\CanonicalFieldsUpdater" alias="fos_user.util.canonical_fields_updater" public="false"/>
    <service id="FOS\UserBundle\Model\UserManagerInterface" alias="sonata.user.orm.user_manager" public="false"/>
    <service id="fos_user.util.email_canonicalizer" alias="fos_user.util.canonicalizer.default"/>
    <service id="fos_user.util.username_canonicalizer" alias="fos_user.util.canonicalizer.default"/>
    <service id="fos_user.util.token_generator" alias="fos_user.util.token_generator.default"/>
    <service id="fos_user.user_manager" alias="sonata.user.orm.user_manager" public="true"/>
    <service id="fos_user.group_manager" alias="sonata.user.orm.group_manager" public="true"/>
    <service id="FOS\UserBundle\Model\GroupManagerInterface" alias="sonata.user.orm.group_manager" public="false"/>
    <service id="fos_user.mailer" alias="fos_user.mailer.default"/>
    <service id="fos_user.session" alias="session" public="false"/>
    <service id="sonata.user.user_manager" alias="sonata.user.orm.user_manager"/>
    <service id="sonata.user.group_manager" alias="sonata.user.orm.group_manager"/>
    <service id="Symfony\Component\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="Symfony\Bundle\FrameworkBundle\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="console.command.doctrine_bundle_doctrinecachebundle_command_containscommand" alias="doctrine_cache.contains_command" public="true"/>
    <service id="console.command.doctrine_bundle_doctrinecachebundle_command_deletecommand" alias="doctrine_cache.delete_command" public="true"/>
    <service id="console.command.doctrine_bundle_doctrinecachebundle_command_flushcommand" alias="doctrine_cache.flush_command" public="true"/>
    <service id="console.command.doctrine_bundle_doctrinecachebundle_command_statscommand" alias="doctrine_cache.stats_command" public="true"/>
    <service id="console.command.sonata_corebundle_command_sonatadumpdoctrinemetacommand" alias="Sonata\CoreBundle\Command\SonataDumpDoctrineMetaCommand" public="true"/>
    <service id="console.command.sonata_corebundle_command_sonatalistformmappingcommand" alias="Sonata\CoreBundle\Command\SonataListFormMappingCommand" public="true"/>
    <service id="console.command.sonata_blockbundle_command_debugblockscommand" alias="Sonata\BlockBundle\Command\DebugBlocksCommand" public="true"/>
    <service id="twig.loader" alias="twig.loader.filesystem"/>
    <service id="knp_menu.menu_provider" alias="knp_menu.menu_provider.chain"/>
    <service id="service_locator._fpuy7b" alias="2_ServiceLocator~5sqlvar" public="false"/>
    <service id="service_locator.ml7rum7" alias="1_ServiceLocator~ctmhces" public="false"/>
    <service id="validator" alias="debug.validator" public="true"/>
    <service id="translator.logging.inner" alias="translator.default" public="false"/>
    <service id="translator.data_collector.inner" alias="translator.logging" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
  </services>
</container>
